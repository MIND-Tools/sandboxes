/*
 * generated by Xtext
 */

package org.ow2.mind.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.resource.containers.IAllContainersState;
import org.eclipse.xtext.ui.editor.hyperlinking.HyperlinkHelper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.editor.templates.CrossReferenceTemplateVariableResolver;
import org.eclipse.xtext.ui.shared.Access;
import org.ow2.mind.ui.hyperlinking.AdlHyperlinkHelper;
import org.ow2.mind.ui.syntaxcoloring.AdlHighlightingConfiguration;
import org.ow2.mind.ui.syntaxcoloring.AdlSemanticHighlightingCalculator;
import org.ow2.mind.ui.templates.AdlCrossReferenceTemplateVariableResolver;

import com.google.inject.Provider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class AdlUiModule extends org.ow2.mind.ui.AbstractAdlUiModule {
  
  public static final String ID = "org.ow2.mind.adl.ui";
  
  public AdlUiModule(AbstractUIPlugin plugin) {
    super(plugin);
  }

  @Override
  public Provider<IAllContainersState> provideIAllContainersState() {
    return Access.<IAllContainersState> provider(MindProjectsState.class);
  }
  
  public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
    return AdlHighlightingConfiguration.class;
  }
  
  public Class<? extends CrossReferenceTemplateVariableResolver> bindCrossReferenceTemplateVariableResolver() {
    return AdlCrossReferenceTemplateVariableResolver.class;
  }
  
  public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
    return AdlSemanticHighlightingCalculator.class;
  }
  
  
  public Class<? extends HyperlinkHelper>bindHyperlinkHelper(){
    return AdlHyperlinkHelper.class;
  }
  
  public Class<? extends AdlUIHelper> bindAdlUIHelper() {
    return AdlUIHelper.class;
  }
}
