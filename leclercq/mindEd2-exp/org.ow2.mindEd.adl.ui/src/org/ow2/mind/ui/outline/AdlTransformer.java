/*
 * generated by Xtext
 */

package org.ow2.mind.ui.outline;

import java.util.Collections;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.ContentOutlineNode;
import org.eclipse.xtext.ui.editor.outline.transformer.AbstractDeclarativeSemanticModelTransformer;
import org.ow2.mind.adl.Annotation;
import org.ow2.mind.adl.Binding;
import org.ow2.mind.adl.Import;
import org.ow2.mind.adl.ParameterDecl;
import org.ow2.mind.adl.SubComponent;
import org.ow2.mind.adl.TemplateParameterDecl;

import com.google.common.collect.Lists;

/**
 * customization of the default outline structure
 */
public class AdlTransformer extends AbstractDeclarativeSemanticModelTransformer {

  // do not show Parameter declaration nodes
  public boolean consumeNode(ParameterDecl node) {
    return false;
  }

  // do not show Annotation nodes
  public boolean consumeNode(Annotation node) {
    return false;
  }

  public List<EObject> getChildren(Annotation node) {
    return Collections.emptyList();
  }

  // do not show Import nodes
  public boolean consumeNode(Import node) {
    return false;
  }

  // do not show TemplateParamter nodes
  public boolean consumeNode(TemplateParameterDecl node) {
    return false;
  }

  // show Binding nodes
  public boolean consumeNode(Binding node) {
    return true;
  }

  public List<EObject> getChildren(SubComponent node) {
    if (node.getAnonymousDef() == null) {
      return Collections.emptyList();
    } else {
      return node.getAnonymousDef().eContents();
    }
  }
}
