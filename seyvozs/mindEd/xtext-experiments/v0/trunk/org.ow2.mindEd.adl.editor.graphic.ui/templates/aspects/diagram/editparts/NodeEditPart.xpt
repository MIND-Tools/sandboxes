
«AROUND additions FOR gmfgen::GenNode-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.ow2.mindEd.adl.editor.graphic.ui.custom.edit.parts.proxy.MindProxy mindProxy = org.ow2.mindEd.adl.editor.graphic.ui.custom.edit.parts.proxy.MindProxyFactory.INSTANCE.createMindProxy (this, VISUAL_ID);
	
	«EXPAND xpt::Common::generatedMemberComment»
	public org.ow2.mindEd.adl.editor.graphic.ui.custom.edit.parts.proxy.MindProxy getMindProxy() {
		return mindProxy;
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected void refreshBounds() {
		if (!getMindProxy().refreshBounds() && getParent() != null)
			super.refreshBounds();
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public void refresh() {
		super.refresh();
		getMindProxy().refresh();
		refreshBounds();
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public void activate() {
		super.activate();
		getMindProxy().activate();
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public org.eclipse.gef.DragTracker getDragTracker(org.eclipse.gef.Request request) {
		org.eclipse.gef.DragTracker tracker = getMindProxy().getDragTracker(request);
		if (tracker == null)
			tracker = super.getDragTracker(request);
		return tracker;
	}
	
	@Override
	protected void handleNotificationEvent(org.eclipse.emf.common.notify.Notification notification) {
		super.handleNotificationEvent(notification);
		getMindProxy().handleNotificationEvent(notification);
	}
	
	
	/**
	 * This method is extended to preserve interfaces figures
	 * 
	 * @see org.eclipse.gef.editparts.AbstractEditPart#reorderChild(EditPart,
	 *      int)
	 */
	 @Override
	protected void reorderChild(org.eclipse.gef.EditPart child, int index) {
		if (org.ow2.mindEd.adl.editor.graphic.ui.custom.edit.parts.proxy.MindProxy.getMindProxyFor(child) instanceof org.ow2.mindEd.adl.editor.graphic.ui.custom.edit.parts.proxy.MindBodyProxy) {
			// Save the border item locator so that it does not get lost during
			// the remove and re-add. This is overridden from the parent class
			// so that the correct content pane is used.
			org.eclipse.draw2d.IFigure container = null;
			org.eclipse.draw2d.LayoutManager layout = null;
			java.util.HashMap<org.eclipse.draw2d.IFigure,org.ow2.mindEd.adl.editor.graphic.ui.custom.layouts.InterfaceBorderItemLocator> locators =
				new java.util.HashMap<org.eclipse.draw2d.IFigure,org.ow2.mindEd.adl.editor.graphic.ui.custom.layouts.InterfaceBorderItemLocator>();
			java.util.List<org.eclipse.draw2d.IFigure> interfaces = new java.util.ArrayList<org.eclipse.draw2d.IFigure>();
			
			if (getFigure() instanceof org.eclipse.gmf.runtime.diagram.ui.figures.BorderedNodeFigure)
				container = ((org.eclipse.gmf.runtime.diagram.ui.figures.BorderedNodeFigure)getFigure()).getBorderItemContainer();
			
			if (container != null) {
				layout = container.getLayoutManager();
				
				@SuppressWarnings("unchecked")
				java.util.List<org.eclipse.gef.EditPart> childChildren = child.getChildren();
				for (org.eclipse.gef.EditPart childChild : childChildren) {
					if (childChild instanceof InterfaceDefinitionEditPart) {
						org.eclipse.draw2d.IFigure interfaceFigure = 
							((InterfaceDefinitionEditPart) childChild).getFigure();
						Object constraint = null;
						
						if (layout != null && interfaceFigure != null)
							constraint = layout.getConstraint(interfaceFigure);
						
						if (constraint != null && constraint instanceof org.ow2.mindEd.adl.editor.graphic.ui.custom.layouts.InterfaceBorderItemLocator) {
							org.ow2.mindEd.adl.editor.graphic.ui.custom.layouts.InterfaceBorderItemLocator locator = (org.ow2.mindEd.adl.editor.graphic.ui.custom.layouts.InterfaceBorderItemLocator) constraint;
							// Save interface's figure and its locator
							interfaces.add(interfaceFigure);
							locators.put(interfaceFigure, locator);
						}
					}
				}
			}
			
			 
            org.eclipse.draw2d.IFigure childFigure = ((org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart) child).getFigure();
            layout = getContentPaneFor((org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) child)
                .getLayoutManager();
           
            Object constraint = null;
            if (layout != null)
                constraint = layout.getConstraint(childFigure);

            super.reorderChild(child, index);

            setLayoutConstraint(child, childFigure, constraint);
            
            if (container != null) {
            	// Interfaces figures must be restored            
                for (org.eclipse.draw2d.IFigure interfaceFigure : interfaces) {
                	 container.add(interfaceFigure, locators.get(interfaceFigure));
                }
            }
            
           
        } else {
            super.reorderChild(child, index);
        }
	}
«ENDAROUND»
