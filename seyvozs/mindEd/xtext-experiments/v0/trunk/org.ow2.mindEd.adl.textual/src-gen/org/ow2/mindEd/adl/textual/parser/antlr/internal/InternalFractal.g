/*
* generated by Xtext
*/
grammar InternalFractal;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.ow2.mindEd.adl.textual.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ow2.mindEd.adl.textual.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ow2.mindEd.adl.textual.services.FractalGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private FractalGrammarAccess grammarAccess;
 	
    public InternalFractalParser(TokenStream input, FractalGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AdlDefinition";	
   	}
   	
   	@Override
   	protected FractalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAdlDefinition
entryRuleAdlDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdlDefinitionRule()); }
	 iv_ruleAdlDefinition=ruleAdlDefinition 
	 { $current=$iv_ruleAdlDefinition.current; } 
	 EOF 
;

// Rule AdlDefinition
ruleAdlDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdlDefinitionAccess().getImportsImportDefinitionParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImportDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdlDefinitionRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"ImportDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAdlDefinitionAccess().getArchitectureDefinitionArchitectureDefinitionParserRuleCall_1_0()); 
	    }
		lv_architectureDefinition_1_0=ruleArchitectureDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdlDefinitionRule());
	        }
       		set(
       			$current, 
       			"architectureDefinition",
        		lv_architectureDefinition_1_0, 
        		"ArchitectureDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArchitectureDefinition
entryRuleArchitectureDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchitectureDefinitionRule()); }
	 iv_ruleArchitectureDefinition=ruleArchitectureDefinition 
	 { $current=$iv_ruleArchitectureDefinition.current; } 
	 EOF 
;

// Rule ArchitectureDefinition
ruleArchitectureDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getCompositeDefinitionParserRuleCall_0()); 
    }
    this_CompositeDefinition_0=ruleCompositeDefinition
    { 
        $current = $this_CompositeDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getPrimitiveDefinitionParserRuleCall_1()); 
    }
    this_PrimitiveDefinition_1=rulePrimitiveDefinition
    { 
        $current = $this_PrimitiveDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getTypeDefinitionParserRuleCall_2()); 
    }
    this_TypeDefinition_2=ruleTypeDefinition
    { 
        $current = $this_TypeDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportDefinitionRule()); }
	 iv_ruleImportDefinition=ruleImportDefinition 
	 { $current=$iv_ruleImportDefinition.current; } 
	 EOF 
;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportDefinitionAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportDefinitionAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleCompositeDefinition
entryRuleCompositeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeDefinitionRule()); }
	 iv_ruleCompositeDefinition=ruleCompositeDefinition 
	 { $current=$iv_ruleCompositeDefinition.current; } 
	 EOF 
;

// Rule CompositeDefinition
ruleCompositeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='composite' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompositeDefinitionAccess().getCompositeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getTemplateSpecifiersListTemplateSpecifiersListParserRuleCall_2_0()); 
	    }
		lv_templateSpecifiersList_2_0=ruleTemplateSpecifiersList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		set(
       			$current, 
       			"templateSpecifiersList",
        		lv_templateSpecifiersList_2_0, 
        		"TemplateSpecifiersList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getCompositeFormalArgumentsListFormalArgumentsListParserRuleCall_3_0()); 
	    }
		lv_compositeFormalArgumentsList_3_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		set(
       			$current, 
       			"compositeFormalArgumentsList",
        		lv_compositeFormalArgumentsList_3_0, 
        		"FormalArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='extends' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCompositeDefinitionAccess().getExtendsKeyword_4_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getSuperTypeArchitectureDefinitionCrossReference_4_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeDefinitionAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getElementsHostedInterfaceDefinitionParserRuleCall_6_0_0()); 
	    }
		lv_elements_7_1=ruleHostedInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_1, 
        		"HostedInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getElementsSubComponentDefinitionParserRuleCall_6_0_1()); 
	    }
		lv_elements_7_2=ruleSubComponentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_2, 
        		"SubComponentDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCompositeDefinitionAccess().getElementsBindingDefinitionParserRuleCall_6_0_2()); 
	    }
		lv_elements_7_3=ruleBindingDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_3, 
        		"BindingDefinition");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompositeDefinitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePrimitiveDefinition
entryRulePrimitiveDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveDefinitionRule()); }
	 iv_rulePrimitiveDefinition=rulePrimitiveDefinition 
	 { $current=$iv_rulePrimitiveDefinition.current; } 
	 EOF 
;

// Rule PrimitiveDefinition
rulePrimitiveDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_abstract_0_0=	'abstract' 
    {
        newLeafNode(lv_abstract_0_0, grammarAccess.getPrimitiveDefinitionAccess().getAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_1='primitive' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimitiveDefinitionAccess().getPrimitiveKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getCompositeFormalArgumentsListFormalArgumentsListParserRuleCall_3_0()); 
	    }
		lv_compositeFormalArgumentsList_3_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		set(
       			$current, 
       			"compositeFormalArgumentsList",
        		lv_compositeFormalArgumentsList_3_0, 
        		"FormalArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='extends' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrimitiveDefinitionAccess().getExtendsKeyword_4_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getSuperTypeArchitectureDefinitionCrossReference_4_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrimitiveDefinitionAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getElementsProvidedInterfaceDefinitionParserRuleCall_6_0_0()); 
	    }
		lv_elements_7_1=ruleProvidedInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_1, 
        		"ProvidedInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getElementsRequiredInterfaceDefinitionParserRuleCall_6_0_1()); 
	    }
		lv_elements_7_2=ruleRequiredInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_2, 
        		"RequiredInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getElementsImplementationDefinitionParserRuleCall_6_0_2()); 
	    }
		lv_elements_7_3=ruleImplementationDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_3, 
        		"ImplementationDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getElementsAttributeDefinitionParserRuleCall_6_0_3()); 
	    }
		lv_elements_7_4=ruleAttributeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_4, 
        		"AttributeDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getPrimitiveDefinitionAccess().getElementsDataDefinitionParserRuleCall_6_0_4()); 
	    }
		lv_elements_7_5=ruleDataDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_5, 
        		"DataDefinition");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrimitiveDefinitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	 iv_ruleTypeDefinition=ruleTypeDefinition 
	 { $current=$iv_ruleTypeDefinition.current; } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDefinitionAccess().getTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeDefinitionAccess().getExtendsKeyword_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getSuperTypeArchitectureDefinitionCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeDefinitionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getElementsProvidedInterfaceDefinitionParserRuleCall_4_0_0()); 
	    }
		lv_elements_5_1=ruleProvidedInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_1, 
        		"ProvidedInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getElementsRequiredInterfaceDefinitionParserRuleCall_4_0_1()); 
	    }
		lv_elements_5_2=ruleRequiredInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_2, 
        		"RequiredInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypeDefinitionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleHostedInterfaceDefinition
entryRuleHostedInterfaceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHostedInterfaceDefinitionRule()); }
	 iv_ruleHostedInterfaceDefinition=ruleHostedInterfaceDefinition 
	 { $current=$iv_ruleHostedInterfaceDefinition.current; } 
	 EOF 
;

// Rule HostedInterfaceDefinition
ruleHostedInterfaceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHostedInterfaceDefinitionAccess().getProvidedInterfaceDefinitionParserRuleCall_0()); 
    }
    this_ProvidedInterfaceDefinition_0=ruleProvidedInterfaceDefinition
    { 
        $current = $this_ProvidedInterfaceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHostedInterfaceDefinitionAccess().getRequiredInterfaceDefinitionParserRuleCall_1()); 
    }
    this_RequiredInterfaceDefinition_1=ruleRequiredInterfaceDefinition
    { 
        $current = $this_RequiredInterfaceDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProvidedInterfaceDefinition
entryRuleProvidedInterfaceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProvidedInterfaceDefinitionRule()); }
	 iv_ruleProvidedInterfaceDefinition=ruleProvidedInterfaceDefinition 
	 { $current=$iv_ruleProvidedInterfaceDefinition.current; } 
	 EOF 
;

// Rule ProvidedInterfaceDefinition
ruleProvidedInterfaceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_role_0_0=	'provides' 
    {
        newLeafNode(lv_role_0_0, grammarAccess.getProvidedInterfaceDefinitionAccess().getRoleProvidesKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "role", lv_role_0_0, "provides");
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedInterfaceDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProvidedInterfaceDefinitionAccess().getSignatureInterfaceDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProvidedInterfaceDefinitionAccess().getAsKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getProvidedInterfaceDefinitionAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)((
(
		lv_collection_4_0=	'[' 
    {
        newLeafNode(lv_collection_4_0, grammarAccess.getProvidedInterfaceDefinitionAccess().getCollectionLeftSquareBracketKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "collection", true, "[");
	    }

)
)(
(
		lv_collectionsize_5_0=RULE_INT
		{
			newLeafNode(lv_collectionsize_5_0, grammarAccess.getProvidedInterfaceDefinitionAccess().getCollectionsizeINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"collectionsize",
        		lv_collectionsize_5_0, 
        		"INT");
	    }

)
)?	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProvidedInterfaceDefinitionAccess().getRightSquareBracketKeyword_4_2());
    }
)?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProvidedInterfaceDefinitionAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleRequiredInterfaceDefinition
entryRuleRequiredInterfaceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredInterfaceDefinitionRule()); }
	 iv_ruleRequiredInterfaceDefinition=ruleRequiredInterfaceDefinition 
	 { $current=$iv_ruleRequiredInterfaceDefinition.current; } 
	 EOF 
;

// Rule RequiredInterfaceDefinition
ruleRequiredInterfaceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_role_0_0=	'requires' 
    {
        newLeafNode(lv_role_0_0, grammarAccess.getRequiredInterfaceDefinitionAccess().getRoleRequiresKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "role", lv_role_0_0, "requires");
	    }

)
)(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getRequiredInterfaceDefinitionAccess().getOptionalOptionalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequiredInterfaceDefinitionAccess().getSignatureInterfaceDefinitionCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequiredInterfaceDefinitionAccess().getAsKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getRequiredInterfaceDefinitionAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)((
(
		lv_collection_5_0=	'[' 
    {
        newLeafNode(lv_collection_5_0, grammarAccess.getRequiredInterfaceDefinitionAccess().getCollectionLeftSquareBracketKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "collection", true, "[");
	    }

)
)(
(
		lv_collectionsize_6_0=RULE_INT
		{
			newLeafNode(lv_collectionsize_6_0, grammarAccess.getRequiredInterfaceDefinitionAccess().getCollectionsizeINTTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"collectionsize",
        		lv_collectionsize_6_0, 
        		"INT");
	    }

)
)?	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequiredInterfaceDefinitionAccess().getRightSquareBracketKeyword_5_2());
    }
)?	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequiredInterfaceDefinitionAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleSubComponentDefinition
entryRuleSubComponentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentDefinitionRule()); }
	 iv_ruleSubComponentDefinition=ruleSubComponentDefinition 
	 { $current=$iv_ruleSubComponentDefinition.current; } 
	 EOF 
;

// Rule SubComponentDefinition
ruleSubComponentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='contains' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubComponentDefinitionAccess().getContainsKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getTypeArchitectureDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubComponentDefinitionAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_2_1_0()); 
	    }
		lv_templatesList_3_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		add(
       			$current, 
       			"templatesList",
        		lv_templatesList_3_0, 
        		"TemplateDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubComponentDefinitionAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_2_2_1_0()); 
	    }
		lv_templatesList_5_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		add(
       			$current, 
       			"templatesList",
        		lv_templatesList_5_0, 
        		"TemplateDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubComponentDefinitionAccess().getGreaterThanSignKeyword_2_3());
    }
)?(	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSubComponentDefinitionAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_3_1_0()); 
	    }
		lv_argumentsList_8_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_8_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSubComponentDefinitionAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_3_2_1_0()); 
	    }
		lv_argumentsList_10_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_10_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSubComponentDefinitionAccess().getRightParenthesisKeyword_3_3());
    }
)?	otherlv_12='as' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSubComponentDefinitionAccess().getAsKeyword_4());
    }
(
(
		lv_name_13_0=RULE_ID
		{
			newLeafNode(lv_name_13_0, grammarAccess.getSubComponentDefinitionAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getBodySubComponentBodyParserRuleCall_6_0()); 
	    }
		lv_body_14_0=ruleSubComponentBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_14_0, 
        		"SubComponentBody");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSubComponentDefinitionAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleSubComponentBody
entryRuleSubComponentBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentBodyRule()); }
	 iv_ruleSubComponentBody=ruleSubComponentBody 
	 { $current=$iv_ruleSubComponentBody.current; } 
	 EOF 
;

// Rule SubComponentBody
ruleSubComponentBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSubComponentBodyAccess().getSubComponentCompositeBodyParserRuleCall_0()); 
    }
    this_SubComponentCompositeBody_0=ruleSubComponentCompositeBody
    { 
        $current = $this_SubComponentCompositeBody_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSubComponentBodyAccess().getSubComponentPrimitiveBodyParserRuleCall_1()); 
    }
    this_SubComponentPrimitiveBody_1=ruleSubComponentPrimitiveBody
    { 
        $current = $this_SubComponentPrimitiveBody_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubComponentCompositeBody
entryRuleSubComponentCompositeBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentCompositeBodyRule()); }
	 iv_ruleSubComponentCompositeBody=ruleSubComponentCompositeBody 
	 { $current=$iv_ruleSubComponentCompositeBody.current; } 
	 EOF 
;

// Rule SubComponentCompositeBody
ruleSubComponentCompositeBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_anonymous_0_0=	'composite' 
    {
        newLeafNode(lv_anonymous_0_0, grammarAccess.getSubComponentCompositeBodyAccess().getAnonymousCompositeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		setWithLastConsumed($current, "anonymous", true, "composite");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubComponentCompositeBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getElementsSubComponentDefinitionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_1=ruleSubComponentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_1, 
        		"SubComponentDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getElementsProvidedInterfaceDefinitionParserRuleCall_2_0_1()); 
	    }
		lv_elements_2_2=ruleProvidedInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_2, 
        		"ProvidedInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getElementsRequiredInterfaceDefinitionParserRuleCall_2_0_2()); 
	    }
		lv_elements_2_3=ruleRequiredInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_3, 
        		"RequiredInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getElementsBindingDefinitionParserRuleCall_2_0_3()); 
	    }
		lv_elements_2_4=ruleBindingDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_4, 
        		"BindingDefinition");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubComponentCompositeBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSubComponentPrimitiveBody
entryRuleSubComponentPrimitiveBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyRule()); }
	 iv_ruleSubComponentPrimitiveBody=ruleSubComponentPrimitiveBody 
	 { $current=$iv_ruleSubComponentPrimitiveBody.current; } 
	 EOF 
;

// Rule SubComponentPrimitiveBody
ruleSubComponentPrimitiveBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_anonymous_0_0=	'primitive' 
    {
        newLeafNode(lv_anonymous_0_0, grammarAccess.getSubComponentPrimitiveBodyAccess().getAnonymousPrimitiveKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		setWithLastConsumed($current, "anonymous", true, "primitive");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubComponentPrimitiveBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsProvidedInterfaceDefinitionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_1=ruleProvidedInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_1, 
        		"ProvidedInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsRequiredInterfaceDefinitionParserRuleCall_2_0_1()); 
	    }
		lv_elements_2_2=ruleRequiredInterfaceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_2, 
        		"RequiredInterfaceDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsImplementationDefinitionParserRuleCall_2_0_2()); 
	    }
		lv_elements_2_3=ruleImplementationDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_3, 
        		"ImplementationDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsAttributeDefinitionParserRuleCall_2_0_3()); 
	    }
		lv_elements_2_4=ruleAttributeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_4, 
        		"AttributeDefinition");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsDataDefinitionParserRuleCall_2_0_4()); 
	    }
		lv_elements_2_5=ruleDataDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_5, 
        		"DataDefinition");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubComponentPrimitiveBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;







// Entry rule entryRuleCompositeElement
entryRuleCompositeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeElementRule()); }
	 iv_ruleCompositeElement=ruleCompositeElement 
	 { $current=$iv_ruleCompositeElement.current; } 
	 EOF 
;

// Rule CompositeElement
ruleCompositeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeElementAccess().getHostedInterfaceDefinitionParserRuleCall_0()); 
    }
    this_HostedInterfaceDefinition_0=ruleHostedInterfaceDefinition
    { 
        $current = $this_HostedInterfaceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeElementAccess().getSubComponentDefinitionParserRuleCall_1()); 
    }
    this_SubComponentDefinition_1=ruleSubComponentDefinition
    { 
        $current = $this_SubComponentDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeElementAccess().getBindingDefinitionParserRuleCall_2()); 
    }
    this_BindingDefinition_2=ruleBindingDefinition
    { 
        $current = $this_BindingDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitiveElement
entryRulePrimitiveElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveElementRule()); }
	 iv_rulePrimitiveElement=rulePrimitiveElement 
	 { $current=$iv_rulePrimitiveElement.current; } 
	 EOF 
;

// Rule PrimitiveElement
rulePrimitiveElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getHostedInterfaceDefinitionParserRuleCall_0()); 
    }
    this_HostedInterfaceDefinition_0=ruleHostedInterfaceDefinition
    { 
        $current = $this_HostedInterfaceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getImplementationDefinitionParserRuleCall_1()); 
    }
    this_ImplementationDefinition_1=ruleImplementationDefinition
    { 
        $current = $this_ImplementationDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getAttributeDefinitionParserRuleCall_2()); 
    }
    this_AttributeDefinition_2=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveElementAccess().getDataDefinitionParserRuleCall_3()); 
    }
    this_DataDefinition_3=ruleDataDefinition
    { 
        $current = $this_DataDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBindingDefinition
entryRuleBindingDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingDefinitionRule()); }
	 iv_ruleBindingDefinition=ruleBindingDefinition 
	 { $current=$iv_ruleBindingDefinition.current; } 
	 EOF 
;

// Rule BindingDefinition
ruleBindingDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='binds' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBindingDefinitionAccess().getBindsKeyword_0());
    }
(	otherlv_1='this' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_0());
    }

    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBindingDefinitionAccess().getSourceParentSubComponentDefinitionCrossReference_1_1_0()); 
	}

)
))	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getBindingDefinitionAccess().getSourceInterfaceRequiredInterfaceDefinitionCrossReference_3_0()); 
	}

)
)(	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_4_0());
    }
(
(
		lv_sourceIndex_6_0=RULE_INT
		{
			newLeafNode(lv_sourceIndex_6_0, grammarAccess.getBindingDefinitionAccess().getSourceIndexINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sourceIndex",
        		lv_sourceIndex_6_0, 
        		"INT");
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_4_2());
    }
)?	otherlv_8='to' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBindingDefinitionAccess().getToKeyword_5());
    }
(	otherlv_9='this' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBindingDefinitionAccess().getThisKeyword_6_0());
    }

    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getBindingDefinitionAccess().getTargetParentSubComponentDefinitionCrossReference_6_1_0()); 
	}

)
))	otherlv_11='.' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_7());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getBindingDefinitionAccess().getTargetInterfaceProvidedInterfaceDefinitionCrossReference_8_0()); 
	}

)
)(	otherlv_13='[' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_9_0());
    }
(
(
		lv_targetIndex_14_0=RULE_INT
		{
			newLeafNode(lv_targetIndex_14_0, grammarAccess.getBindingDefinitionAccess().getTargetIndexINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetIndex",
        		lv_targetIndex_14_0, 
        		"INT");
	    }

)
)	otherlv_15=']' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_9_2());
    }
)?	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBindingDefinitionAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleFormalArgument
entryRuleFormalArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalArgumentRule()); }
	 iv_ruleFormalArgument=ruleFormalArgument 
	 { $current=$iv_ruleFormalArgument.current; } 
	 EOF 
;

// Rule FormalArgument
ruleFormalArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFormalArgumentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormalArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleFormalArgumentsList
entryRuleFormalArgumentsList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalArgumentsListRule()); }
	 iv_ruleFormalArgumentsList=ruleFormalArgumentsList 
	 { $current=$iv_ruleFormalArgumentsList.current; } 
	 EOF 
;

// Rule FormalArgumentsList
ruleFormalArgumentsList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormalArgumentsListAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_0()); 
	    }
		lv_formalArguments_1_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalArgumentsListRule());
	        }
       		add(
       			$current, 
       			"formalArguments",
        		lv_formalArguments_1_0, 
        		"FormalArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFormalArgumentsListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_2_1_0()); 
	    }
		lv_formalArguments_3_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalArgumentsListRule());
	        }
       		add(
       			$current, 
       			"formalArguments",
        		lv_formalArguments_3_0, 
        		"FormalArgument");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFormalArgumentsListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleTemplateSpecifier
entryRuleTemplateSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateSpecifierRule()); }
	 iv_ruleTemplateSpecifier=ruleTemplateSpecifier 
	 { $current=$iv_ruleTemplateSpecifier.current; } 
	 EOF 
;

// Rule TemplateSpecifier
ruleTemplateSpecifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateSpecifierAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='conformsto' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateSpecifierAccess().getConformstoKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateSpecifierRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifierAccess().getReferenceTypeDefinitionCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTemplateSpecifiersList
entryRuleTemplateSpecifiersList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateSpecifiersListRule()); }
	 iv_ruleTemplateSpecifiersList=ruleTemplateSpecifiersList 
	 { $current=$iv_ruleTemplateSpecifiersList.current; } 
	 EOF 
;

// Rule TemplateSpecifiersList
ruleTemplateSpecifiersList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateSpecifiersListAccess().getLessThanSignKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_templateSpecifiers_1_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateSpecifiersListRule());
	        }
       		add(
       			$current, 
       			"templateSpecifiers",
        		lv_templateSpecifiers_1_0, 
        		"TemplateSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateSpecifiersListAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_1_1_0()); 
	    }
		lv_templateSpecifiers_3_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateSpecifiersListRule());
	        }
       		add(
       			$current, 
       			"templateSpecifiers",
        		lv_templateSpecifiers_3_0, 
        		"TemplateSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateSpecifiersListAccess().getGreaterThanSignKeyword_2());
    }
)
;





// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); } 
	 iv_ruleAttributeType=ruleAttributeType 
	 { $current=$iv_ruleAttributeType.current.getText(); }  
	 EOF 
;

// Rule AttributeType
ruleAttributeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='STRUCT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getSTRUCTKeyword_0()); 
    }

    |
	kw='UNION' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getUNIONKeyword_1()); 
    }

    |
	kw='ENUM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getENUMKeyword_2()); 
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getAttributeTypeAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRulesignedINT
entryRulesignedINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedINTRule()); } 
	 iv_rulesignedINT=rulesignedINT 
	 { $current=$iv_rulesignedINT.current.getText(); }  
	 EOF 
;

// Rule signedINT
rulesignedINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedINTAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedINTAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSignedINTAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleHexadecimalType
entryRuleHexadecimalType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getHexadecimalTypeRule()); } 
	 iv_ruleHexadecimalType=ruleHexadecimalType 
	 { $current=$iv_ruleHexadecimalType.current.getText(); }  
	 EOF 
;

// Rule HexadecimalType
ruleHexadecimalType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='0x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getHexadecimalTypeAccess().getXKeyword_0()); 
    }
    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getHexadecimalTypeAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleValue
entryRuleValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); } 
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current.getText(); }  
	 EOF 
;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValueAccess().getIDTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getSignedINTParserRuleCall_1()); 
    }
    this_signedINT_1=rulesignedINT    {
		$current.merge(this_signedINT_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getHexadecimalTypeParserRuleCall_2()); 
    }
    this_HexadecimalType_2=ruleHexadecimalType    {
		$current.merge(this_HexadecimalType_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_3()); 
    }

    |
	kw='null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getValueAccess().getNullKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleTemplateDefinition
entryRuleTemplateDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateDefinitionRule()); }
	 iv_ruleTemplateDefinition=ruleTemplateDefinition 
	 { $current=$iv_ruleTemplateDefinition.current; } 
	 EOF 
;

// Rule TemplateDefinition
ruleTemplateDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateDefinitionAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateDefinitionAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getReferenceCompositeDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentDefinitionRule()); }
	 iv_ruleArgumentDefinition=ruleArgumentDefinition 
	 { $current=$iv_ruleArgumentDefinition.current; } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_argumentName_0_0=RULE_ID
		{
			newLeafNode(lv_argumentName_0_0, grammarAccess.getArgumentDefinitionAccess().getArgumentNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"argumentName",
        		lv_argumentName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentDefinitionAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_1_0()); 
	    }
		lv_argumentValue_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
	        }
       		set(
       			$current, 
       			"argumentValue",
        		lv_argumentValue_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getTypeAttributeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_attributeName_2_0=RULE_ID
		{
			newLeafNode(lv_attributeName_2_0, grammarAccess.getAttributeDefinitionAccess().getAttributeNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributeName",
        		lv_attributeName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributeDefinitionAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getValueValueParserRuleCall_3_1_0()); 
	    }
		lv_value_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleImplementationDefinition
entryRuleImplementationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplementationDefinitionRule()); }
	 iv_ruleImplementationDefinition=ruleImplementationDefinition 
	 { $current=$iv_ruleImplementationDefinition.current; } 
	 EOF 
;

// Rule ImplementationDefinition
ruleImplementationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='source' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImplementationDefinitionAccess().getSourceKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getImplementationDefinitionAccess().getFileCFileCParserRuleCall_1_0_0()); 
	    }
		lv_fileC_1_0=ruleFileC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplementationDefinitionRule());
	        }
       		set(
       			$current, 
       			"fileC",
        		lv_fileC_1_0, 
        		"FileC");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getImplementationDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_1_1_0()); 
	    }
		lv_inlineCcode_2_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplementationDefinitionRule());
	        }
       		set(
       			$current, 
       			"inlineCcode",
        		lv_inlineCcode_2_0, 
        		"InlineCodeC");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImplementationDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDataDefinition
entryRuleDataDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataDefinitionRule()); }
	 iv_ruleDataDefinition=ruleDataDefinition 
	 { $current=$iv_ruleDataDefinition.current; } 
	 EOF 
;

// Rule DataDefinition
ruleDataDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='data' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataDefinitionAccess().getDataKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefinitionAccess().getFileCFileCParserRuleCall_1_0_0()); 
	    }
		lv_fileC_1_0=ruleFileC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefinitionRule());
	        }
       		set(
       			$current, 
       			"fileC",
        		lv_fileC_1_0, 
        		"FileC");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_1_1_0()); 
	    }
		lv_inlineCcode_2_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefinitionRule());
	        }
       		set(
       			$current, 
       			"inlineCcode",
        		lv_inlineCcode_2_0, 
        		"InlineCodeC");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleFileC
entryRuleFileC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileCRule()); }
	 iv_ruleFileC=ruleFileC 
	 { $current=$iv_ruleFileC.current; } 
	 EOF 
;

// Rule FileC
ruleFileC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFileCAccess().getDirectoryPathParserRuleCall_0_0()); 
	    }
		lv_directory_0_0=rulePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileCRule());
	        }
       		set(
       			$current, 
       			"directory",
        		lv_directory_0_0, 
        		"Path");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFileCAccess().getNameFileNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileCRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInlineCodeC
entryRuleInlineCodeC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineCodeCRule()); }
	 iv_ruleInlineCodeC=ruleInlineCodeC 
	 { $current=$iv_ruleInlineCodeC.current; } 
	 EOF 
;

// Rule InlineCodeC
ruleInlineCodeC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_codeC_0_0=RULE_CODE_C
		{
			newLeafNode(lv_codeC_0_0, grammarAccess.getInlineCodeCAccess().getCodeCCODE_CTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineCodeCRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"codeC",
        		lv_codeC_0_0, 
        		"CODE_C");
	    }

)
)
;





// Entry rule entryRulePath
entryRulePath returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathRule()); } 
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current.getText(); }  
	 EOF 
;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPathAccess().getIDTerminalRuleCall_0_0()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_0_1()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopFullStopKeyword_0_2()); 
    }
)?(    this_SL_3=RULE_SL    {
		$current.merge(this_SL_3);
    }

    { 
    newLeafNode(this_SL_3, grammarAccess.getPathAccess().getSLTerminalRuleCall_1_0()); 
    }
((    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getPathAccess().getIDTerminalRuleCall_1_1_0_0()); 
    }
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getHyphenMinusKeyword_1_1_0_1()); 
    }
)?)*
    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopFullStopKeyword_1_1_1()); 
    }
))*    this_SL_7=RULE_SL    {
		$current.merge(this_SL_7);
    }

    { 
    newLeafNode(this_SL_7, grammarAccess.getPathAccess().getSLTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFileName
entryRuleFileName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileNameRule()); } 
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current.getText(); }  
	 EOF 
;

// Rule FileName
ruleFileName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFileNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFileNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFileNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)?)
    ;







// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getNameAnnotationTypeParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_1_0()); 
	    }
		lv_annotationElements_3_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"annotationElements",
        		lv_annotationElements_3_0, 
        		"AnnotationElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_2_1_0()); 
	    }
		lv_annotationElements_5_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"annotationElements",
        		lv_annotationElements_5_0, 
        		"AnnotationElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeRule()); } 
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current.getText(); }  
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getOverrideKeyword_0()); 
    }

    |
	kw='Singleton' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getSingletonKeyword_1()); 
    }

    |
	kw='LDFlags' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getLDFlagsKeyword_2()); 
    }

    |
	kw='CFlags' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getCFlagsKeyword_3()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getQualifiedNameParserRuleCall_4()); 
    }
    this_QualifiedName_4=ruleQualifiedName    {
		$current.merge(this_QualifiedName_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleAnnotationElement
entryRuleAnnotationElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationElementRule()); }
	 iv_ruleAnnotationElement=ruleAnnotationElement 
	 { $current=$iv_ruleAnnotationElement.current; } 
	 EOF 
;

// Rule AnnotationElement
ruleAnnotationElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_elementName_0_0=RULE_ID
		{
			newLeafNode(lv_elementName_0_0, grammarAccess.getAnnotationElementAccess().getElementNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementName",
        		lv_elementName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_1_0()); 
	    }
		lv_elementValue_2_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
	        }
       		set(
       			$current, 
       			"elementValue",
        		lv_elementValue_2_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleElementValue
entryRuleElementValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementValueRule()); }
	 iv_ruleElementValue=ruleElementValue 
	 { $current=$iv_ruleElementValue.current; } 
	 EOF 
;

// Rule ElementValue
ruleElementValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getConstantValueParserRuleCall_0()); 
    }
    this_ConstantValue_0=ruleConstantValue
    { 
        $current = $this_ConstantValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_1()); 
    }
    this_Annotation_1=ruleAnnotation
    { 
        $current = $this_Annotation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_2()); 
    }
    this_ElementValueArrayInitializer_2=ruleElementValueArrayInitializer
    { 
        $current = $this_ElementValueArrayInitializer_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleElementValueArrayInitializer
entryRuleElementValueArrayInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementValueArrayInitializerRule()); }
	 iv_ruleElementValueArrayInitializer=ruleElementValueArrayInitializer 
	 { $current=$iv_ruleElementValueArrayInitializer.current; } 
	 EOF 
;

// Rule ElementValueArrayInitializer
ruleElementValueArrayInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_1_0()); 
	    }
		lv_values_1_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementValueArrayInitializerRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_2_1_0()); 
	    }
		lv_values_3_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementValueArrayInitializerRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantValueAccess().getValueConstantFormatParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleConstantFormat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ConstantFormat");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstantFormat
entryRuleConstantFormat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantFormatRule()); } 
	 iv_ruleConstantFormat=ruleConstantFormat 
	 { $current=$iv_ruleConstantFormat.current.getText(); }  
	 EOF 
;

// Rule ConstantFormat
ruleConstantFormat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getConstantFormatAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getConstantFormatAccess().getSTRINGTerminalRuleCall_1()); 
    }
)
    ;





RULE_CODE_C : '{{' ( options {greedy=false;} : . )*'}}';

RULE_SL : ('\\'|'\\\\'|'/');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


