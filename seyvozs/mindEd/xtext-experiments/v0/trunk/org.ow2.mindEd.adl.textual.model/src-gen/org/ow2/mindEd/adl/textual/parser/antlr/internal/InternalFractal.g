/*
* generated by Xtext
*/
grammar InternalFractal;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.ow2.mindEd.adl.textual.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ow2.mindEd.adl.textual.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ow2.mindEd.adl.textual.services.FractalGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private FractalGrammarAccess grammarAccess;
 	
    public InternalFractalParser(TokenStream input, FractalGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AdlDefinition";	
   	}
   	
   	@Override
   	protected FractalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAdlDefinition
entryRuleAdlDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdlDefinitionRule()); }
	 iv_ruleAdlDefinition=ruleAdlDefinition 
	 { $current=$iv_ruleAdlDefinition.current; } 
	 EOF 
;

// Rule AdlDefinition
ruleAdlDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdlDefinitionAccess().getImportsImportDefinitionParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImportDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdlDefinitionRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"ImportDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAdlDefinitionAccess().getArchitecturedefinitionArchitectureDefinitionParserRuleCall_1_0()); 
	    }
		lv_architecturedefinition_1_0=ruleArchitectureDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdlDefinitionRule());
	        }
       		set(
       			$current, 
       			"architecturedefinition",
        		lv_architecturedefinition_1_0, 
        		"ArchitectureDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportDefinitionRule()); }
	 iv_ruleImportDefinition=ruleImportDefinition 
	 { $current=$iv_ruleImportDefinition.current; } 
	 EOF 
;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportDefinitionAccess().getImportKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportDefinitionAccess().getImportNameFQNParserRuleCall_1_0_0()); 
	    }
		lv_importName_1_1=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
	        }
       		set(
       			$current, 
       			"importName",
        		lv_importName_1_1, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getImportDefinitionAccess().getImportNameFULL_IMPORT_NAMEParserRuleCall_1_0_1()); 
	    }
		lv_importName_1_2=ruleFULL_IMPORT_NAME		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
	        }
       		set(
       			$current, 
       			"importName",
        		lv_importName_1_2, 
        		"FULL_IMPORT_NAME");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleArchitectureDefinition
entryRuleArchitectureDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchitectureDefinitionRule()); }
	 iv_ruleArchitectureDefinition=ruleArchitectureDefinition 
	 { $current=$iv_ruleArchitectureDefinition.current; } 
	 EOF 
;

// Rule ArchitectureDefinition
ruleArchitectureDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getComponentTypeDefinitionParserRuleCall_0()); 
    }
    this_ComponentTypeDefinition_0=ruleComponentTypeDefinition
    { 
        $current = $this_ComponentTypeDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getPrimitiveComponentDefinitionParserRuleCall_1()); 
    }
    this_PrimitiveComponentDefinition_1=rulePrimitiveComponentDefinition
    { 
        $current = $this_PrimitiveComponentDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getCompositeComponentDefinitionParserRuleCall_2()); 
    }
    this_CompositeComponentDefinition_2=ruleCompositeComponentDefinition
    { 
        $current = $this_CompositeComponentDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitiveComponentDefinition
entryRulePrimitiveComponentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionRule()); }
	 iv_rulePrimitiveComponentDefinition=rulePrimitiveComponentDefinition 
	 { $current=$iv_rulePrimitiveComponentDefinition.current; } 
	 EOF 
;

// Rule PrimitiveComponentDefinition
rulePrimitiveComponentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getPrimitiveComponentDefinitionAccess().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_2='primitive' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getNameFQNParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveFormalArgumentsListFormalArgumentsListParserRuleCall_4_0()); 
	    }
		lv_primitiveFormalArgumentsList_4_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"primitiveFormalArgumentsList",
        		lv_primitiveFormalArgumentsList_4_0, 
        		"FormalArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getReferencesListPrimitiveReferencesListParserRuleCall_5_0()); 
	    }
		lv_referencesList_5_0=rulePrimitiveReferencesList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"referencesList",
        		lv_referencesList_5_0, 
        		"PrimitiveReferencesList");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrimitiveComponentDefinitionAccess().getLeftCurlyBracketKeyword_6_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getBodyPrimitiveBodyParserRuleCall_6_0_1_0()); 
	    }
		lv_body_7_0=rulePrimitiveBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"PrimitiveBody");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrimitiveComponentDefinitionAccess().getRightCurlyBracketKeyword_6_0_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getBodyPrimitiveBodyParserRuleCall_6_1_0()); 
	    }
		lv_body_9_0=rulePrimitiveBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"PrimitiveBody");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePrimitiveDefinitionElement
entryRulePrimitiveDefinitionElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveDefinitionElementRule()); }
	 iv_rulePrimitiveDefinitionElement=rulePrimitiveDefinitionElement 
	 { $current=$iv_rulePrimitiveDefinitionElement.current; } 
	 EOF 
;

// Rule PrimitiveDefinitionElement
rulePrimitiveDefinitionElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_0()); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getAttributeDefinitionParserRuleCall_1()); 
    }
    this_AttributeDefinition_1=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getDataDefinitionParserRuleCall_2()); 
    }
    this_DataDefinition_2=ruleDataDefinition
    { 
        $current = $this_DataDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getImplementationDefinitionParserRuleCall_3()); 
    }
    this_ImplementationDefinition_3=ruleImplementationDefinition
    { 
        $current = $this_ImplementationDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComponentTypeDefinition
entryRuleComponentTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentTypeDefinitionRule()); }
	 iv_ruleComponentTypeDefinition=ruleComponentTypeDefinition 
	 { $current=$iv_ruleComponentTypeDefinition.current; } 
	 EOF 
;

// Rule ComponentTypeDefinition
ruleComponentTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentTypeDefinitionAccess().getTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getNameFQNParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getReferencesListTypeReferencesListParserRuleCall_3_0()); 
	    }
		lv_referencesList_3_0=ruleTypeReferencesList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"referencesList",
        		lv_referencesList_3_0, 
        		"TypeReferencesList");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentTypeDefinitionAccess().getLeftCurlyBracketKeyword_4_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getBodyTypeBodyParserRuleCall_4_0_1_0()); 
	    }
		lv_body_5_0=ruleTypeBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"TypeBody");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getComponentTypeDefinitionAccess().getRightCurlyBracketKeyword_4_0_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getBodyTypeBodyParserRuleCall_4_1_0()); 
	    }
		lv_body_7_0=ruleTypeBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"TypeBody");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTypeReferenceDefinition
entryRuleTypeReferenceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeReferenceDefinitionRule()); }
	 iv_ruleTypeReferenceDefinition=ruleTypeReferenceDefinition 
	 { $current=$iv_ruleTypeReferenceDefinition.current; } 
	 EOF 
;

// Rule TypeReferenceDefinition
ruleTypeReferenceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0()); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeReferenceDefinitionRule());
	        }
       		set(
       			$current, 
       			"referenceName",
        		lv_referenceName_0_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTypeDefinitionElement
entryRuleTypeDefinitionElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefinitionElementRule()); }
	 iv_ruleTypeDefinitionElement=ruleTypeDefinitionElement 
	 { $current=$iv_ruleTypeDefinitionElement.current; } 
	 EOF 
;

// Rule TypeDefinitionElement
ruleTypeDefinitionElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall()); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleCompositeComponentDefinition
entryRuleCompositeComponentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeComponentDefinitionRule()); }
	 iv_ruleCompositeComponentDefinition=ruleCompositeComponentDefinition 
	 { $current=$iv_ruleCompositeComponentDefinition.current; } 
	 EOF 
;

// Rule CompositeComponentDefinition
ruleCompositeComponentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='composite' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeComponentDefinitionAccess().getCompositeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getNameFQNParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getTemplateSpecifiersListTemplateSpecifiersListParserRuleCall_3_0()); 
	    }
		lv_templateSpecifiersList_3_0=ruleTemplateSpecifiersList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"templateSpecifiersList",
        		lv_templateSpecifiersList_3_0, 
        		"TemplateSpecifiersList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeFormalArgumentsListFormalArgumentsListParserRuleCall_4_0()); 
	    }
		lv_compositeFormalArgumentsList_4_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"compositeFormalArgumentsList",
        		lv_compositeFormalArgumentsList_4_0, 
        		"FormalArgumentsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getReferencesListCompositeReferencesListParserRuleCall_5_0()); 
	    }
		lv_referencesList_5_0=ruleCompositeReferencesList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"referencesList",
        		lv_referencesList_5_0, 
        		"CompositeReferencesList");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeComponentDefinitionAccess().getLeftCurlyBracketKeyword_6_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getBodyCompositeBodyParserRuleCall_6_0_1_0()); 
	    }
		lv_body_7_0=ruleCompositeBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"CompositeBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompositeComponentDefinitionAccess().getRightCurlyBracketKeyword_6_0_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getBodyCompositeBodyParserRuleCall_6_1_0()); 
	    }
		lv_body_9_0=ruleCompositeBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"CompositeBody");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTemplateSpecifiersList
entryRuleTemplateSpecifiersList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateSpecifiersListRule()); }
	 iv_ruleTemplateSpecifiersList=ruleTemplateSpecifiersList 
	 { $current=$iv_ruleTemplateSpecifiersList.current; } 
	 EOF 
;

// Rule TemplateSpecifiersList
ruleTemplateSpecifiersList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateSpecifiersListAccess().getLessThanSignKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_0_0()); 
	    }
		lv_templateSpecifiers_1_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateSpecifiersListRule());
	        }
       		add(
       			$current, 
       			"templateSpecifiers",
        		lv_templateSpecifiers_1_0, 
        		"TemplateSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateSpecifiersListAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_1_1_0()); 
	    }
		lv_templateSpecifiers_3_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateSpecifiersListRule());
	        }
       		add(
       			$current, 
       			"templateSpecifiers",
        		lv_templateSpecifiers_3_0, 
        		"TemplateSpecifier");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateSpecifiersListAccess().getGreaterThanSignKeyword_2());
    }
)
;





// Entry rule entryRuleFormalArgumentsList
entryRuleFormalArgumentsList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalArgumentsListRule()); }
	 iv_ruleFormalArgumentsList=ruleFormalArgumentsList 
	 { $current=$iv_ruleFormalArgumentsList.current; } 
	 EOF 
;

// Rule FormalArgumentsList
ruleFormalArgumentsList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormalArgumentsListAccess().getLeftParenthesisKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_0_0()); 
	    }
		lv_formalArguments_1_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalArgumentsListRule());
	        }
       		add(
       			$current, 
       			"formalArguments",
        		lv_formalArguments_1_0, 
        		"FormalArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFormalArgumentsListAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_1_1_0()); 
	    }
		lv_formalArguments_3_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalArgumentsListRule());
	        }
       		add(
       			$current, 
       			"formalArguments",
        		lv_formalArguments_3_0, 
        		"FormalArgument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFormalArgumentsListAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRulePrimitiveReferencesList
entryRulePrimitiveReferencesList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveReferencesListRule()); }
	 iv_rulePrimitiveReferencesList=rulePrimitiveReferencesList 
	 { $current=$iv_rulePrimitiveReferencesList.current; } 
	 EOF 
;

// Rule PrimitiveReferencesList
rulePrimitiveReferencesList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitiveReferencesListAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getReferencesPrimitiveReferenceDefinitionParserRuleCall_1_0()); 
	    }
		lv_references_1_0=rulePrimitiveReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_1_0, 
        		"PrimitiveReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimitiveReferencesListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getReferencesPrimitiveReferenceDefinitionParserRuleCall_2_1_0()); 
	    }
		lv_references_3_0=rulePrimitiveReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_3_0, 
        		"PrimitiveReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCompositeReferencesList
entryRuleCompositeReferencesList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeReferencesListRule()); }
	 iv_ruleCompositeReferencesList=ruleCompositeReferencesList 
	 { $current=$iv_ruleCompositeReferencesList.current; } 
	 EOF 
;

// Rule CompositeReferencesList
ruleCompositeReferencesList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompositeReferencesListAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferencesListAccess().getReferencesCompositeReferenceDefinitionParserRuleCall_1_0()); 
	    }
		lv_references_1_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_1_0, 
        		"CompositeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompositeReferencesListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferencesListAccess().getReferencesCompositeReferenceDefinitionParserRuleCall_2_1_0()); 
	    }
		lv_references_3_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_3_0, 
        		"CompositeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTypeReferencesList
entryRuleTypeReferencesList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeReferencesListRule()); }
	 iv_ruleTypeReferencesList=ruleTypeReferencesList 
	 { $current=$iv_ruleTypeReferencesList.current; } 
	 EOF 
;

// Rule TypeReferencesList
ruleTypeReferencesList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeReferencesListAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeReferencesListAccess().getReferencesTypeReferenceDefinitionParserRuleCall_1_0()); 
	    }
		lv_references_1_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_1_0, 
        		"TypeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeReferencesListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeReferencesListAccess().getReferencesTypeReferenceDefinitionParserRuleCall_2_1_0()); 
	    }
		lv_references_3_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeReferencesListRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_3_0, 
        		"TypeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFormalArgument
entryRuleFormalArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalArgumentRule()); }
	 iv_ruleFormalArgument=ruleFormalArgument 
	 { $current=$iv_ruleFormalArgument.current; } 
	 EOF 
;

// Rule FormalArgument
ruleFormalArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFormalArgumentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormalArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleCompositeDefinitionElement
entryRuleCompositeDefinitionElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeDefinitionElementRule()); }
	 iv_ruleCompositeDefinitionElement=ruleCompositeDefinitionElement 
	 { $current=$iv_ruleCompositeDefinitionElement.current; } 
	 EOF 
;

// Rule CompositeDefinitionElement
ruleCompositeDefinitionElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getSubComponentDefinitionParserRuleCall_0()); 
    }
    this_SubComponentDefinition_0=ruleSubComponentDefinition
    { 
        $current = $this_SubComponentDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_1()); 
    }
    this_InterfaceDefinition_1=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getBindingDefinitionParserRuleCall_2()); 
    }
    this_BindingDefinition_2=ruleBindingDefinition
    { 
        $current = $this_BindingDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubComponentDefinition
entryRuleSubComponentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentDefinitionRule()); }
	 iv_ruleSubComponentDefinition=ruleSubComponentDefinition 
	 { $current=$iv_ruleSubComponentDefinition.current; } 
	 EOF 
;

// Rule SubComponentDefinition
ruleSubComponentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='contains' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubComponentDefinitionAccess().getContainsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getReferenceDefinitionComponentReferenceParserRuleCall_2_0()); 
	    }
		lv_referenceDefinition_2_0=ruleComponentReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"referenceDefinition",
        		lv_referenceDefinition_2_0, 
        		"ComponentReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubComponentDefinitionAccess().getAsKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getSubComponentDefinitionAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getBodySubComponentCompositeBodyParserRuleCall_5_0_0()); 
	    }
		lv_body_5_1=ruleSubComponentCompositeBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_1, 
        		"SubComponentCompositeBody");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getBodySubComponentPrimitiveBodyParserRuleCall_5_0_1()); 
	    }
		lv_body_5_2=ruleSubComponentPrimitiveBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_2, 
        		"SubComponentPrimitiveBody");
	        afterParserOrEnumRuleCall();
	    }

)

)
)?)
;







// Entry rule entryRuleSubComponentCompositeBody
entryRuleSubComponentCompositeBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentCompositeBodyRule()); }
	 iv_ruleSubComponentCompositeBody=ruleSubComponentCompositeBody 
	 { $current=$iv_ruleSubComponentCompositeBody.current; } 
	 EOF 
;

// Rule SubComponentCompositeBody
ruleSubComponentCompositeBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_anonymous_1_0=	'composite' 
    {
        newLeafNode(lv_anonymous_1_0, grammarAccess.getSubComponentCompositeBodyAccess().getAnonymousCompositeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		setWithLastConsumed($current, "anonymous", true, "composite");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubComponentCompositeBodyAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentCompositeBodyAccess().getElementsCompositeDefinitionElementParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleCompositeDefinitionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"CompositeDefinitionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubComponentCompositeBodyAccess().getSemicolonKeyword_3_1());
    }
)?)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSubComponentCompositeBodyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSubComponentPrimitiveBody
entryRuleSubComponentPrimitiveBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyRule()); }
	 iv_ruleSubComponentPrimitiveBody=ruleSubComponentPrimitiveBody 
	 { $current=$iv_ruleSubComponentPrimitiveBody.current; } 
	 EOF 
;

// Rule SubComponentPrimitiveBody
ruleSubComponentPrimitiveBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_anonymous_1_0=	'primitive' 
    {
        newLeafNode(lv_anonymous_1_0, grammarAccess.getSubComponentPrimitiveBodyAccess().getAnonymousPrimitiveKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		setWithLastConsumed($current, "anonymous", true, "primitive");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubComponentPrimitiveBodyAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubComponentPrimitiveBodyAccess().getElementsPrimitiveDefinitionElementParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=rulePrimitiveDefinitionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubComponentPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"PrimitiveDefinitionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubComponentPrimitiveBodyAccess().getSemicolonKeyword_3_1());
    }
)?)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSubComponentPrimitiveBodyAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCompositeBody
entryRuleCompositeBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeBodyRule()); }
	 iv_ruleCompositeBody=ruleCompositeBody 
	 { $current=$iv_ruleCompositeBody.current; } 
	 EOF 
;

// Rule CompositeBody
ruleCompositeBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeBodyAccess().getElementsCompositeDefinitionElementParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleCompositeDefinitionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"CompositeDefinitionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeBodyAccess().getSemicolonKeyword_1());
    }
)?)*
;





// Entry rule entryRulePrimitiveBody
entryRulePrimitiveBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveBodyRule()); }
	 iv_rulePrimitiveBody=rulePrimitiveBody 
	 { $current=$iv_rulePrimitiveBody.current; } 
	 EOF 
;

// Rule PrimitiveBody
rulePrimitiveBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveBodyAccess().getElementsPrimitiveDefinitionElementParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=rulePrimitiveDefinitionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"PrimitiveDefinitionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimitiveBodyAccess().getSemicolonKeyword_1());
    }
)?)*
;





// Entry rule entryRuleTypeBody
entryRuleTypeBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeBodyRule()); }
	 iv_ruleTypeBody=ruleTypeBody 
	 { $current=$iv_ruleTypeBody.current; } 
	 EOF 
;

// Rule TypeBody
ruleTypeBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeBodyAccess().getElementsTypeDefinitionElementParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleTypeDefinitionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"TypeDefinitionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeBodyAccess().getSemicolonKeyword_1());
    }
)?)*
;







// Entry rule entryRuleComponentReference
entryRuleComponentReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentReferenceRule()); }
	 iv_ruleComponentReference=ruleComponentReference 
	 { $current=$iv_ruleComponentReference.current; } 
	 EOF 
;

// Rule ComponentReference
ruleComponentReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentReferenceAccess().getCompositeReferenceDefinitionParserRuleCall_0()); 
    }
    this_CompositeReferenceDefinition_0=ruleCompositeReferenceDefinition
    { 
        $current = $this_CompositeReferenceDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentReferenceAccess().getPrimitiveReferenceDefinitionParserRuleCall_1()); 
    }
    this_PrimitiveReferenceDefinition_1=rulePrimitiveReferenceDefinition
    { 
        $current = $this_PrimitiveReferenceDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentReferenceAccess().getTypeReferenceDefinitionParserRuleCall_2()); 
    }
    this_TypeReferenceDefinition_2=ruleTypeReferenceDefinition
    { 
        $current = $this_TypeReferenceDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompositeReferenceDefinition
entryRuleCompositeReferenceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeReferenceDefinitionRule()); }
	 iv_ruleCompositeReferenceDefinition=ruleCompositeReferenceDefinition 
	 { $current=$iv_ruleCompositeReferenceDefinition.current; } 
	 EOF 
;

// Rule CompositeReferenceDefinition
ruleCompositeReferenceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0_0()); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferenceDefinitionRule());
	        }
       		set(
       			$current, 
       			"referenceName",
        		lv_referenceName_0_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeReferenceDefinitionAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_1_0()); 
	    }
		lv_templatesList_2_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"templatesList",
        		lv_templatesList_2_0, 
        		"TemplateDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_2_1_0()); 
	    }
		lv_templatesList_4_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"templatesList",
        		lv_templatesList_4_0, 
        		"TemplateDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCompositeReferenceDefinitionAccess().getGreaterThanSignKeyword_1_3());
    }
)?(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeReferenceDefinitionAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_1_0()); 
	    }
		lv_argumentsList_7_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_7_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_2_1_0()); 
	    }
		lv_argumentsList_9_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_9_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCompositeReferenceDefinitionAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRulePrimitiveReferenceDefinition
entryRulePrimitiveReferenceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionRule()); }
	 iv_rulePrimitiveReferenceDefinition=rulePrimitiveReferenceDefinition 
	 { $current=$iv_rulePrimitiveReferenceDefinition.current; } 
	 EOF 
;

// Rule PrimitiveReferenceDefinition
rulePrimitiveReferenceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0_0()); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveReferenceDefinitionRule());
	        }
       		set(
       			$current, 
       			"referenceName",
        		lv_referenceName_0_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimitiveReferenceDefinitionAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_1_0()); 
	    }
		lv_argumentsList_2_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_2_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimitiveReferenceDefinitionAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_2_1_0()); 
	    }
		lv_argumentsList_4_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveReferenceDefinitionRule());
	        }
       		add(
       			$current, 
       			"argumentsList",
        		lv_argumentsList_4_0, 
        		"ArgumentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimitiveReferenceDefinitionAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleTemplateDefinition
entryRuleTemplateDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateDefinitionRule()); }
	 iv_ruleTemplateDefinition=ruleTemplateDefinition 
	 { $current=$iv_ruleTemplateDefinition.current; } 
	 EOF 
;

// Rule TemplateDefinition
ruleTemplateDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateDefinitionAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateDefinitionAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getReferenceCompositeReferenceDefinitionParserRuleCall_1_0()); 
	    }
		lv_reference_2_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateDefinitionRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_2_0, 
        		"CompositeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='attribute' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getTypeAttributeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_attributeName_3_0=RULE_ID
		{
			newLeafNode(lv_attributeName_3_0, grammarAccess.getAttributeDefinitionAccess().getAttributeNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributeName",
        		lv_attributeName_3_0, 
        		"ID");
	    }

)
)(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeDefinitionAccess().getEqualsSignKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getValueValueParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentDefinitionRule()); }
	 iv_ruleArgumentDefinition=ruleArgumentDefinition 
	 { $current=$iv_ruleArgumentDefinition.current; } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_argumentName_0_0=RULE_ID
		{
			newLeafNode(lv_argumentName_0_0, grammarAccess.getArgumentDefinitionAccess().getArgumentNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"argumentName",
        		lv_argumentName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentDefinitionAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_0_2_0()); 
	    }
		lv_argumentValue_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
	        }
       		set(
       			$current, 
       			"argumentValue",
        		lv_argumentValue_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_1_0()); 
	    }
		lv_argumentValue_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
	        }
       		set(
       			$current, 
       			"argumentValue",
        		lv_argumentValue_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInterfaceDefinition
entryRuleInterfaceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceDefinitionRule()); }
	 iv_ruleInterfaceDefinition=ruleInterfaceDefinition 
	 { $current=$iv_ruleInterfaceDefinition.current; } 
	 EOF 
;

// Rule InterfaceDefinition
ruleInterfaceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getRoleRoleEnumRuleCall_1_0()); 
	    }
		lv_role_1_0=ruleRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDefinitionRule());
	        }
       		set(
       			$current, 
       			"role",
        		lv_role_1_0, 
        		"Role");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_optional_2_0=	'optional' 
    {
        newLeafNode(lv_optional_2_0, grammarAccess.getInterfaceDefinitionAccess().getOptionalOptionalKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getSignatureFQNParserRuleCall_3_0()); 
	    }
		lv_signature_3_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceDefinitionRule());
	        }
       		set(
       			$current, 
       			"signature",
        		lv_signature_3_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceDefinitionAccess().getAsKeyword_4());
    }
(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)(((
(
		lv_collection_6_0=	'[' 
    {
        newLeafNode(lv_collection_6_0, grammarAccess.getInterfaceDefinitionAccess().getCollectionLeftSquareBracketKeyword_6_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "collection", true, "[");
	    }

)
)(
(
		lv_collectionsize_7_0=RULE_INT
		{
			newLeafNode(lv_collectionsize_7_0, grammarAccess.getInterfaceDefinitionAccess().getCollectionsizeINTTerminalRuleCall_6_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"collectionsize",
        		lv_collectionsize_7_0, 
        		"INT");
	    }

)
)?	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInterfaceDefinitionAccess().getRightSquareBracketKeyword_6_0_2());
    }
)
    |(
(
		lv_collection_9_0=	'[]' 
    {
        newLeafNode(lv_collection_9_0, grammarAccess.getInterfaceDefinitionAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_6_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceDefinitionRule());
	        }
       		setWithLastConsumed($current, "collection", true, "[]");
	    }

)
))?)
;





// Entry rule entryRuleBindingDefinition
entryRuleBindingDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingDefinitionRule()); }
	 iv_ruleBindingDefinition=ruleBindingDefinition 
	 { $current=$iv_ruleBindingDefinition.current; } 
	 EOF 
;

// Rule BindingDefinition
ruleBindingDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBindingDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='binds' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingDefinitionAccess().getBindsKeyword_1_0());
    }
(	otherlv_2='this' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_1_0());
    }

    |(
(
		lv_interfaceSourceParentLabel_3_0=RULE_ID
		{
			newLeafNode(lv_interfaceSourceParentLabel_3_0, grammarAccess.getBindingDefinitionAccess().getInterfaceSourceParentLabelIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceSourceParentLabel",
        		lv_interfaceSourceParentLabel_3_0, 
        		"ID");
	    }

)
))	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_1_2());
    }
(
(
		lv_interfaceSourceLabel_5_0=RULE_ID
		{
			newLeafNode(lv_interfaceSourceLabel_5_0, grammarAccess.getBindingDefinitionAccess().getInterfaceSourceLabelIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceSourceLabel",
        		lv_interfaceSourceLabel_5_0, 
        		"ID");
	    }

)
)(	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_1_4_0());
    }
(
(
		lv_interfaceSourceIndex_7_0=RULE_INT
		{
			newLeafNode(lv_interfaceSourceIndex_7_0, grammarAccess.getBindingDefinitionAccess().getInterfaceSourceIndexINTTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceSourceIndex",
        		lv_interfaceSourceIndex_7_0, 
        		"INT");
	    }

)
)	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_1_4_2());
    }
)?	otherlv_9='to' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBindingDefinitionAccess().getToKeyword_1_5());
    }
(	otherlv_10='this' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_6_0());
    }

    |(
(
		lv_interfaceTargetParentLabel_11_0=RULE_ID
		{
			newLeafNode(lv_interfaceTargetParentLabel_11_0, grammarAccess.getBindingDefinitionAccess().getInterfaceTargetParentLabelIDTerminalRuleCall_1_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceTargetParentLabel",
        		lv_interfaceTargetParentLabel_11_0, 
        		"ID");
	    }

)
))	otherlv_12='.' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_1_7());
    }
(
(
		lv_interfaceTargetLabel_13_0=RULE_ID
		{
			newLeafNode(lv_interfaceTargetLabel_13_0, grammarAccess.getBindingDefinitionAccess().getInterfaceTargetLabelIDTerminalRuleCall_1_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceTargetLabel",
        		lv_interfaceTargetLabel_13_0, 
        		"ID");
	    }

)
)(	otherlv_14='[' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_1_9_0());
    }
(
(
		lv_interfaceTargetIndex_15_0=RULE_INT
		{
			newLeafNode(lv_interfaceTargetIndex_15_0, grammarAccess.getBindingDefinitionAccess().getInterfaceTargetIndexINTTerminalRuleCall_1_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfaceTargetIndex",
        		lv_interfaceTargetIndex_15_0, 
        		"INT");
	    }

)
)	otherlv_16=']' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_1_9_2());
    }
)?))
;





// Entry rule entryRuleDataDefinition
entryRuleDataDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataDefinitionRule()); }
	 iv_ruleDataDefinition=ruleDataDefinition 
	 { $current=$iv_ruleDataDefinition.current; } 
	 EOF 
;

// Rule DataDefinition
ruleDataDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='data' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataDefinitionAccess().getDataKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefinitionAccess().getFileCFileCParserRuleCall_2_0_0()); 
	    }
		lv_fileC_2_0=ruleFileC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefinitionRule());
	        }
       		set(
       			$current, 
       			"fileC",
        		lv_fileC_2_0, 
        		"FileC");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_2_1_0()); 
	    }
		lv_inlineCcode_3_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataDefinitionRule());
	        }
       		set(
       			$current, 
       			"inlineCcode",
        		lv_inlineCcode_3_0, 
        		"InlineCodeC");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleImplementationDefinition
entryRuleImplementationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplementationDefinitionRule()); }
	 iv_ruleImplementationDefinition=ruleImplementationDefinition 
	 { $current=$iv_ruleImplementationDefinition.current; } 
	 EOF 
;

// Rule ImplementationDefinition
ruleImplementationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getImplementationDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0()); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplementationDefinitionRule());
	        }
       		set(
       			$current, 
       			"annotationsList",
        		lv_annotationsList_0_0, 
        		"AnnotationsList");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='source' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImplementationDefinitionAccess().getSourceKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getImplementationDefinitionAccess().getFileCFileCParserRuleCall_2_0_0()); 
	    }
		lv_fileC_2_0=ruleFileC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplementationDefinitionRule());
	        }
       		set(
       			$current, 
       			"fileC",
        		lv_fileC_2_0, 
        		"FileC");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getImplementationDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_2_1_0()); 
	    }
		lv_inlineCcode_3_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplementationDefinitionRule());
	        }
       		set(
       			$current, 
       			"inlineCcode",
        		lv_inlineCcode_3_0, 
        		"InlineCodeC");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleTemplateSpecifier
entryRuleTemplateSpecifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateSpecifierRule()); }
	 iv_ruleTemplateSpecifier=ruleTemplateSpecifier 
	 { $current=$iv_ruleTemplateSpecifier.current; } 
	 EOF 
;

// Rule TemplateSpecifier
ruleTemplateSpecifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateSpecifierAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateSpecifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='conformsto' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateSpecifierAccess().getConformstoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateSpecifierAccess().getReferenceTypeReferenceDefinitionParserRuleCall_2_0()); 
	    }
		lv_reference_2_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateSpecifierRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_2_0, 
        		"TypeReferenceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFileC
entryRuleFileC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileCRule()); }
	 iv_ruleFileC=ruleFileC 
	 { $current=$iv_ruleFileC.current; } 
	 EOF 
;

// Rule FileC
ruleFileC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFileCAccess().getDirectoryPathParserRuleCall_0_0()); 
	    }
		lv_directory_0_0=rulePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileCRule());
	        }
       		set(
       			$current, 
       			"directory",
        		lv_directory_0_0, 
        		"Path");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFileCAccess().getFileNameFileNameParserRuleCall_1_0()); 
	    }
		lv_fileName_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileCRule());
	        }
       		set(
       			$current, 
       			"fileName",
        		lv_fileName_1_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFileName
entryRuleFileName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileNameRule()); } 
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current.getText(); }  
	 EOF 
;

// Rule FileName
ruleFileName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFileNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFileNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFileNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleInlineCodeC
entryRuleInlineCodeC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineCodeCRule()); }
	 iv_ruleInlineCodeC=ruleInlineCodeC 
	 { $current=$iv_ruleInlineCodeC.current; } 
	 EOF 
;

// Rule InlineCodeC
ruleInlineCodeC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_codeC_0_0=RULE_CODEC
		{
			newLeafNode(lv_codeC_0_0, grammarAccess.getInlineCodeCAccess().getCodeCCodeCTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineCodeCRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"codeC",
        		lv_codeC_0_0, 
        		"CodeC");
	    }

)
)
;





// Entry rule entryRuleAnnotationsList
entryRuleAnnotationsList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationsListRule()); }
	 iv_ruleAnnotationsList=ruleAnnotationsList 
	 { $current=$iv_ruleAnnotationsList.current; } 
	 EOF 
;

// Rule AnnotationsList
ruleAnnotationsList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationsListRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotations_1_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationsListRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_1_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getNameAnnotationTypeParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_1_0()); 
	    }
		lv_annotationElements_3_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"annotationElements",
        		lv_annotationElements_3_0, 
        		"AnnotationElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_2_1_0()); 
	    }
		lv_annotationElements_5_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"annotationElements",
        		lv_annotationElements_5_0, 
        		"AnnotationElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleAnnotationElement
entryRuleAnnotationElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationElementRule()); }
	 iv_ruleAnnotationElement=ruleAnnotationElement 
	 { $current=$iv_ruleAnnotationElement.current; } 
	 EOF 
;

// Rule AnnotationElement
ruleAnnotationElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_0_0()); 
	    }
		lv_elementValue_0_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
	        }
       		set(
       			$current, 
       			"elementValue",
        		lv_elementValue_0_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_elementName_1_0=RULE_ID
		{
			newLeafNode(lv_elementName_1_0, grammarAccess.getAnnotationElementAccess().getElementNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementName",
        		lv_elementName_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_1_2_0()); 
	    }
		lv_elementValue_3_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationElementRule());
	        }
       		set(
       			$current, 
       			"elementValue",
        		lv_elementValue_3_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleElementValue
entryRuleElementValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementValueRule()); }
	 iv_ruleElementValue=ruleElementValue 
	 { $current=$iv_ruleElementValue.current; } 
	 EOF 
;

// Rule ElementValue
ruleElementValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getConstantValueParserRuleCall_0()); 
    }
    this_ConstantValue_0=ruleConstantValue
    { 
        $current = $this_ConstantValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_1()); 
    }
    this_Annotation_1=ruleAnnotation
    { 
        $current = $this_Annotation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_2()); 
    }
    this_ElementValueArrayInitializer_2=ruleElementValueArrayInitializer
    { 
        $current = $this_ElementValueArrayInitializer_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantValueAccess().getValueConstantFormatParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleConstantFormat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ConstantFormat");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstantFormat
entryRuleConstantFormat returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantFormatRule()); } 
	 iv_ruleConstantFormat=ruleConstantFormat 
	 { $current=$iv_ruleConstantFormat.current.getText(); }  
	 EOF 
;

// Rule ConstantFormat
ruleConstantFormat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getConstantFormatAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getConstantFormatAccess().getSTRINGTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleElementValueArrayInitializer
entryRuleElementValueArrayInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementValueArrayInitializerRule()); }
	 iv_ruleElementValueArrayInitializer=ruleElementValueArrayInitializer 
	 { $current=$iv_ruleElementValueArrayInitializer.current; } 
	 EOF 
;

// Rule ElementValueArrayInitializer
ruleElementValueArrayInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_1_0()); 
	    }
		lv_values_1_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementValueArrayInitializerRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_2_1_0()); 
	    }
		lv_values_3_0=ruleElementValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementValueArrayInitializerRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"ElementValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleValue
entryRuleValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); } 
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current.getText(); }  
	 EOF 
;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValueAccess().getIDTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getSignedINTParserRuleCall_1()); 
    }
    this_signedINT_1=rulesignedINT    {
		$current.merge(this_signedINT_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getHexadecimalTypeParserRuleCall_2()); 
    }
    this_HexadecimalType_2=ruleHexadecimalType    {
		$current.merge(this_HexadecimalType_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_3()); 
    }

    |
	kw='null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getValueAccess().getNullKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleHexadecimalType
entryRuleHexadecimalType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getHexadecimalTypeRule()); } 
	 iv_ruleHexadecimalType=ruleHexadecimalType 
	 { $current=$iv_ruleHexadecimalType.current.getText(); }  
	 EOF 
;

// Rule HexadecimalType
ruleHexadecimalType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='0x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getHexadecimalTypeAccess().getXKeyword_0()); 
    }
    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getHexadecimalTypeAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeRule()); } 
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current.getText(); }  
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Override' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getOverrideKeyword_0()); 
    }

    |
	kw='Singleton' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getSingletonKeyword_1()); 
    }

    |
	kw='LDFlags' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getLDFlagsKeyword_2()); 
    }

    |
	kw='CFlags' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTypeAccess().getCFlagsKeyword_3()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getFQNParserRuleCall_4()); 
    }
    this_FQN_4=ruleFQN    {
		$current.merge(this_FQN_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); } 
	 iv_ruleAttributeType=ruleAttributeType 
	 { $current=$iv_ruleAttributeType.current.getText(); }  
	 EOF 
;

// Rule AttributeType
ruleAttributeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='STRUCT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getSTRUCTKeyword_0()); 
    }

    |
	kw='UNION' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getUNIONKeyword_1()); 
    }

    |
	kw='ENUM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypeAccess().getENUMKeyword_2()); 
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getAttributeTypeAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleFULL_IMPORT_NAME
entryRuleFULL_IMPORT_NAME returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFULL_IMPORT_NAMERule()); } 
	 iv_ruleFULL_IMPORT_NAME=ruleFULL_IMPORT_NAME 
	 { $current=$iv_ruleFULL_IMPORT_NAME.current.getText(); }  
	 EOF 
;

// Rule FULL_IMPORT_NAME
ruleFULL_IMPORT_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFULL_IMPORT_NAMEAccess().getFQNParserRuleCall_0()); 
    }
    this_FQN_0=ruleFQN    {
		$current.merge(this_FQN_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFULL_IMPORT_NAMEAccess().getFullStopAsteriskKeyword_1()); 
    }
)
    ;





// Entry rule entryRulePath
entryRulePath returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathRule()); } 
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current.getText(); }  
	 EOF 
;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getPathAccess().getIDTerminalRuleCall_0_0_0()); 
    }
(
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getColonKeyword_0_0_1()); 
    }
)?)
    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_0_1()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopFullStopKeyword_0_2()); 
    }
)?(    this_SL_4=RULE_SL    {
		$current.merge(this_SL_4);
    }

    { 
    newLeafNode(this_SL_4, grammarAccess.getPathAccess().getSLTerminalRuleCall_1_0()); 
    }
((    this_ID_5=RULE_ID    {
		$current.merge(this_ID_5);
    }

    { 
    newLeafNode(this_ID_5, grammarAccess.getPathAccess().getIDTerminalRuleCall_1_1_0_0()); 
    }
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getHyphenMinusKeyword_1_1_0_1()); 
    }
)?)*
    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPathAccess().getFullStopFullStopKeyword_1_1_1()); 
    }
))*    this_SL_8=RULE_SL    {
		$current.merge(this_SL_8);
    }

    { 
    newLeafNode(this_SL_8, grammarAccess.getPathAccess().getSLTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulesignedINT
entryRulesignedINT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedINTRule()); } 
	 iv_rulesignedINT=rulesignedINT 
	 { $current=$iv_rulesignedINT.current.getText(); }  
	 EOF 
;

// Rule signedINT
rulesignedINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedINTAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedINTAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSignedINTAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Rule Role
ruleRole returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='provides' 
	{
        $current = grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='requires' 
	{
        $current = grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1()); 
    }
));



RULE_CODEC : '{{' ( options {greedy=false;} : . )*'}}';

RULE_SL : ('\\'|'\\\\'|'/');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


