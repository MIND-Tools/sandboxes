/*
* generated by Xtext
*/
grammar InternalFractal;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.ow2.fractal.mind.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ow2.fractal.mind.xtext.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.ow2.fractal.mind.xtext.services.FractalGrammarAccess;

}

@parser::members {
 
 	private FractalGrammarAccess grammarAccess;
 	
    public InternalFractalParser(TokenStream input, IAstFactory factory, FractalGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/ow2/fractal/mind/xtext/parser/antlr/internal/InternalFractal.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AdlDefinition";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAdlDefinition
entryRuleAdlDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAdlDefinitionRule(), currentNode); }
	 iv_ruleAdlDefinition=ruleAdlDefinition 
	 { $current=$iv_ruleAdlDefinition.current; } 
	 EOF 
;

// Rule AdlDefinition
ruleAdlDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getImportsImportDefinitionParserRuleCall_0_0(), currentNode); 
	    }
	    lv_imports_0=ruleImportDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "imports", lv_imports_0, "ImportDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getDefinitionAnnotationsListAnnotationsListParserRuleCall_1_0(), currentNode); 
	    }
	    lv_definitionAnnotationsList_1=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "definitionAnnotationsList", lv_definitionAnnotationsList_1, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getArchitecturedefinitionArchitectureDefinitionParserRuleCall_2_0(), currentNode); 
	    }
	    lv_architecturedefinition_2=ruleArchitectureDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "architecturedefinition", lv_architecturedefinition_2, "ArchitectureDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*);





// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getImportDefinitionRule(), currentNode); }
	 iv_ruleImportDefinition=ruleImportDefinition 
	 { $current=$iv_ruleImportDefinition.current; } 
	 EOF 
;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.getImportDefinitionAccess().getImportKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getImportDefinitionAccess().getImportNameFullyQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
	    lv_importName_1=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "importName", lv_importName_1, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('.*' 
    {
        createLeafNode(grammarAccess.getImportDefinitionAccess().getFullStopAsteriskKeyword_2(), null); 
    }
)?';' 
    {
        createLeafNode(grammarAccess.getImportDefinitionAccess().getSemicolonKeyword_3(), null); 
    }
);





// Entry rule entryRuleArchitectureDefinition
entryRuleArchitectureDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getArchitectureDefinitionRule(), currentNode); }
	 iv_ruleArchitectureDefinition=ruleArchitectureDefinition 
	 { $current=$iv_ruleArchitectureDefinition.current; } 
	 EOF 
;

// Rule ArchitectureDefinition
ruleArchitectureDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getComponentTypeDefinitionParserRuleCall_0(), currentNode); 
    }
    this_ComponentTypeDefinition_0=ruleComponentTypeDefinition
    { 
        $current = $this_ComponentTypeDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getPrimitiveComponentDefinitionParserRuleCall_1(), currentNode); 
    }
    this_PrimitiveComponentDefinition_1=rulePrimitiveComponentDefinition
    { 
        $current = $this_PrimitiveComponentDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getCompositeComponentDefinitionParserRuleCall_2(), currentNode); 
    }
    this_CompositeComponentDefinition_2=ruleCompositeComponentDefinition
    { 
        $current = $this_CompositeComponentDefinition_2.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRulePrimitiveComponentDefinition
entryRulePrimitiveComponentDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionRule(), currentNode); }
	 iv_rulePrimitiveComponentDefinition=rulePrimitiveComponentDefinition 
	 { $current=$iv_rulePrimitiveComponentDefinition.current; } 
	 EOF 
;

// Rule PrimitiveComponentDefinition
rulePrimitiveComponentDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_abstract_0='abstract' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getAbstractAbstractKeyword_0_0(), "abstract"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "abstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'primitive' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getNameFullyQualifiedNameParserRuleCall_2_0(), currentNode); 
	    }
	    lv_name_2=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveFormalArgumentsListFormalArgumentsListParserRuleCall_3_0(), currentNode); 
	    }
	    lv_primitiveFormalArgumentsList_3=ruleFormalArgumentsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "primitiveFormalArgumentsList", lv_primitiveFormalArgumentsList_3, "FormalArgumentsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveReferencesListPrimitiveReferencesListParserRuleCall_4_0(), currentNode); 
	    }
	    lv_primitiveReferencesList_4=rulePrimitiveReferencesList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "primitiveReferencesList", lv_primitiveReferencesList_4, "PrimitiveReferencesList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(('{' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveElementsAnnotationsListParserRuleCall_5_0_1_0_0(), currentNode); 
	    }
	    lv_primitiveElements_6=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_6, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveElementsPrimitiveDefinitionElementParserRuleCall_5_0_1_1_0(), currentNode); 
	    }
	    lv_primitiveElements_7=rulePrimitiveDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_7, "PrimitiveDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2(), null); 
    }
)
    |((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveElementsAnnotationsListParserRuleCall_5_1_0_0(), currentNode); 
	    }
	    lv_primitiveElements_9=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_9, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveElementsPrimitiveDefinitionElementParserRuleCall_5_1_1_0(), currentNode); 
	    }
	    lv_primitiveElements_10=rulePrimitiveDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_10, "PrimitiveDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*));





// Entry rule entryRulePrimitiveDefinitionElement
entryRulePrimitiveDefinitionElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveDefinitionElementRule(), currentNode); }
	 iv_rulePrimitiveDefinitionElement=rulePrimitiveDefinitionElement 
	 { $current=$iv_rulePrimitiveDefinitionElement.current; } 
	 EOF 
;

// Rule PrimitiveDefinitionElement
rulePrimitiveDefinitionElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_0_0(), currentNode); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getAttributeDefinitionParserRuleCall_0_1(), currentNode); 
    }
    this_AttributeDefinition_1=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getDataDefinitionParserRuleCall_0_2(), currentNode); 
    }
    this_DataDefinition_2=ruleDataDefinition
    { 
        $current = $this_DataDefinition_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getImplementationDefinitionParserRuleCall_0_3(), currentNode); 
    }
    this_ImplementationDefinition_3=ruleImplementationDefinition
    { 
        $current = $this_ImplementationDefinition_3.current; 
        currentNode = currentNode.getParent();
    }
)(';' 
    {
        createLeafNode(grammarAccess.getPrimitiveDefinitionElementAccess().getSemicolonKeyword_1(), null); 
    }
)?);





// Entry rule entryRuleComponentTypeDefinition
entryRuleComponentTypeDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getComponentTypeDefinitionRule(), currentNode); }
	 iv_ruleComponentTypeDefinition=ruleComponentTypeDefinition 
	 { $current=$iv_ruleComponentTypeDefinition.current; } 
	 EOF 
;

// Rule ComponentTypeDefinition
ruleComponentTypeDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('type' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getNameFullyQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
	    lv_name_1=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeReferencesListTypeReferencesListParserRuleCall_2_0(), currentNode); 
	    }
	    lv_typeReferencesList_2=ruleTypeReferencesList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "typeReferencesList", lv_typeReferencesList_2, "TypeReferencesList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeElementsAnnotationsListParserRuleCall_3_0_0_0(), currentNode); 
	    }
	    lv_typeElements_3=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeElements", lv_typeElements_3, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeElementsTypeDefinitionElementParserRuleCall_3_0_1_0(), currentNode); 
	    }
	    lv_typeElements_4=ruleTypeDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeElements", lv_typeElements_4, "TypeDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*
    |('{' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getLeftCurlyBracketKeyword_3_1_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeElementsAnnotationsListParserRuleCall_3_1_1_0_0(), currentNode); 
	    }
	    lv_typeElements_6=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeElements", lv_typeElements_6, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeElementsTypeDefinitionElementParserRuleCall_3_1_1_1_0(), currentNode); 
	    }
	    lv_typeElements_7=ruleTypeDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeElements", lv_typeElements_7, "TypeDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getRightCurlyBracketKeyword_3_1_2(), null); 
    }
)));





// Entry rule entryRuleTypeReferencesList
entryRuleTypeReferencesList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferencesListRule(), currentNode); }
	 iv_ruleTypeReferencesList=ruleTypeReferencesList 
	 { $current=$iv_ruleTypeReferencesList.current; } 
	 EOF 
;

// Rule TypeReferencesList
ruleTypeReferencesList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('extends' 
    {
        createLeafNode(grammarAccess.getTypeReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferencesListAccess().getTypeReferencesTypeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_typeReferences_1=ruleTypeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeReferences", lv_typeReferences_1, "TypeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getTypeReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferencesListAccess().getTypeReferencesTypeReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_typeReferences_3=ruleTypeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "typeReferences", lv_typeReferences_3, "TypeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*);





// Entry rule entryRuleTypeReferenceDefinition
entryRuleTypeReferenceDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferenceDefinitionRule(), currentNode); }
	 iv_ruleTypeReferenceDefinition=ruleTypeReferenceDefinition 
	 { $current=$iv_ruleTypeReferenceDefinition.current; } 
	 EOF 
;

// Rule TypeReferenceDefinition
ruleTypeReferenceDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferenceDefinitionAccess().getReferenceNameFullyQualifiedNameParserRuleCall_0(), currentNode); 
	    }
	    lv_referenceName_0=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "referenceName", lv_referenceName_0, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
);





// Entry rule entryRuleTypeDefinitionElement
entryRuleTypeDefinitionElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTypeDefinitionElementRule(), currentNode); }
	 iv_ruleTypeDefinitionElement=ruleTypeDefinitionElement 
	 { $current=$iv_ruleTypeDefinitionElement.current; } 
	 EOF 
;

// Rule TypeDefinitionElement
ruleTypeDefinitionElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_0(), currentNode); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        currentNode = currentNode.getParent();
    }
(';' 
    {
        createLeafNode(grammarAccess.getTypeDefinitionElementAccess().getSemicolonKeyword_1(), null); 
    }
)?);





// Entry rule entryRuleCompositeComponentDefinition
entryRuleCompositeComponentDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeComponentDefinitionRule(), currentNode); }
	 iv_ruleCompositeComponentDefinition=ruleCompositeComponentDefinition 
	 { $current=$iv_ruleCompositeComponentDefinition.current; } 
	 EOF 
;

// Rule CompositeComponentDefinition
ruleCompositeComponentDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('composite' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getNameFullyQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
	    lv_name_1=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getTemplateSpecifiersListTemplateSpecifiersListParserRuleCall_2_0(), currentNode); 
	    }
	    lv_templateSpecifiersList_2=ruleTemplateSpecifiersList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "templateSpecifiersList", lv_templateSpecifiersList_2, "TemplateSpecifiersList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeFormalArgumentsListFormalArgumentsListParserRuleCall_3_0(), currentNode); 
	    }
	    lv_compositeFormalArgumentsList_3=ruleFormalArgumentsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "compositeFormalArgumentsList", lv_compositeFormalArgumentsList_3, "FormalArgumentsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeReferencesListCompositeReferencesListParserRuleCall_4_0(), currentNode); 
	    }
	    lv_compositeReferencesList_4=ruleCompositeReferencesList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "compositeReferencesList", lv_compositeReferencesList_4, "CompositeReferencesList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(('{' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeElementsAnnotationsListParserRuleCall_5_0_1_0_0(), currentNode); 
	    }
	    lv_compositeElements_6=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_6, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeElementsCompositeDefinitionElementParserRuleCall_5_0_1_1_0(), currentNode); 
	    }
	    lv_compositeElements_7=ruleCompositeDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_7, "CompositeDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2(), null); 
    }
)
    |((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeElementsAnnotationsListParserRuleCall_5_1_0_0(), currentNode); 
	    }
	    lv_compositeElements_9=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_9, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeElementsCompositeDefinitionElementParserRuleCall_5_1_1_0(), currentNode); 
	    }
	    lv_compositeElements_10=ruleCompositeDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_10, "CompositeDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*));





// Entry rule entryRuleTemplateSpecifiersList
entryRuleTemplateSpecifiersList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTemplateSpecifiersListRule(), currentNode); }
	 iv_ruleTemplateSpecifiersList=ruleTemplateSpecifiersList 
	 { $current=$iv_ruleTemplateSpecifiersList.current; } 
	 EOF 
;

// Rule TemplateSpecifiersList
ruleTemplateSpecifiersList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('<' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getLessThanSignKeyword_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_0_0(), currentNode); 
	    }
	    lv_templateSpecifiers_1=ruleTemplateSpecifier 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifiersListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "templateSpecifiers", lv_templateSpecifiers_1, "TemplateSpecifier", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getCommaKeyword_1_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_1_1_0(), currentNode); 
	    }
	    lv_templateSpecifiers_3=ruleTemplateSpecifier 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifiersListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "templateSpecifiers", lv_templateSpecifiers_3, "TemplateSpecifier", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)'>' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getGreaterThanSignKeyword_2(), null); 
    }
);





// Entry rule entryRuleFormalArgumentsList
entryRuleFormalArgumentsList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFormalArgumentsListRule(), currentNode); }
	 iv_ruleFormalArgumentsList=ruleFormalArgumentsList 
	 { $current=$iv_ruleFormalArgumentsList.current; } 
	 EOF 
;

// Rule FormalArgumentsList
ruleFormalArgumentsList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('(' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getLeftParenthesisKeyword_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_0_0(), currentNode); 
	    }
	    lv_formalArguments_1=ruleFormalArgument 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "formalArguments", lv_formalArguments_1, "FormalArgument", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getCommaKeyword_1_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_1_1_0(), currentNode); 
	    }
	    lv_formalArguments_3=ruleFormalArgument 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "formalArguments", lv_formalArguments_3, "FormalArgument", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)')' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getRightParenthesisKeyword_2(), null); 
    }
);





// Entry rule entryRuleCompositeReferencesList
entryRuleCompositeReferencesList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeReferencesListRule(), currentNode); }
	 iv_ruleCompositeReferencesList=ruleCompositeReferencesList 
	 { $current=$iv_ruleCompositeReferencesList.current; } 
	 EOF 
;

// Rule CompositeReferencesList
ruleCompositeReferencesList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('extends' 
    {
        createLeafNode(grammarAccess.getCompositeReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferencesListAccess().getCompositeReferencesCompositeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_compositeReferences_1=ruleCompositeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeReferences", lv_compositeReferences_1, "CompositeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getCompositeReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferencesListAccess().getCompositeReferencesCompositeReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_compositeReferences_3=ruleCompositeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeReferences", lv_compositeReferences_3, "CompositeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*);





// Entry rule entryRulePrimitiveReferencesList
entryRulePrimitiveReferencesList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveReferencesListRule(), currentNode); }
	 iv_rulePrimitiveReferencesList=rulePrimitiveReferencesList 
	 { $current=$iv_rulePrimitiveReferencesList.current; } 
	 EOF 
;

// Rule PrimitiveReferencesList
rulePrimitiveReferencesList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('extends' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getPrimitiveReferencesPrimitiveReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_primitiveReferences_1=rulePrimitiveReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveReferences", lv_primitiveReferences_1, "PrimitiveReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getPrimitiveReferencesPrimitiveReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_primitiveReferences_3=rulePrimitiveReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveReferences", lv_primitiveReferences_3, "PrimitiveReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*);





// Entry rule entryRuleFormalArgument
entryRuleFormalArgument returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFormalArgumentRule(), currentNode); }
	 iv_ruleFormalArgument=ruleFormalArgument 
	 { $current=$iv_ruleFormalArgument.current; } 
	 EOF 
;

// Rule FormalArgument
ruleFormalArgument returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getFormalArgumentAccess().getNameIDTerminalRuleCall_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
);





// Entry rule entryRuleCompositeDefinitionElement
entryRuleCompositeDefinitionElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeDefinitionElementRule(), currentNode); }
	 iv_ruleCompositeDefinitionElement=ruleCompositeDefinitionElement 
	 { $current=$iv_ruleCompositeDefinitionElement.current; } 
	 EOF 
;

// Rule CompositeDefinitionElement
ruleCompositeDefinitionElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getSubComponentDefinitionParserRuleCall_0_0(), currentNode); 
    }
    this_SubComponentDefinition_0=ruleSubComponentDefinition
    { 
        $current = $this_SubComponentDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_0_1(), currentNode); 
    }
    this_InterfaceDefinition_1=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getBindingDefinitionParserRuleCall_0_2(), currentNode); 
    }
    this_BindingDefinition_2=ruleBindingDefinition
    { 
        $current = $this_BindingDefinition_2.current; 
        currentNode = currentNode.getParent();
    }
)(';' 
    {
        createLeafNode(grammarAccess.getCompositeDefinitionElementAccess().getSemicolonKeyword_1(), null); 
    }
)?);





// Entry rule entryRuleSubComponentDefinition
entryRuleSubComponentDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getSubComponentDefinitionRule(), currentNode); }
	 iv_ruleSubComponentDefinition=ruleSubComponentDefinition 
	 { $current=$iv_ruleSubComponentDefinition.current; } 
	 EOF 
;

// Rule SubComponentDefinition
ruleSubComponentDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('contains' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getContainsKeyword_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getCompositeSubComponentParserRuleCall_1_0(), currentNode); 
    }
    this_CompositeSubComponent_1=ruleCompositeSubComponent
    { 
        $current = $this_CompositeSubComponent_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getCompositeAnonymousSubComponentParserRuleCall_1_1(), currentNode); 
    }
    this_CompositeAnonymousSubComponent_2=ruleCompositeAnonymousSubComponent
    { 
        $current = $this_CompositeAnonymousSubComponent_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getPrimitiveSubComponentParserRuleCall_1_2(), currentNode); 
    }
    this_PrimitiveSubComponent_3=rulePrimitiveSubComponent
    { 
        $current = $this_PrimitiveSubComponent_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getPrimitiveAnonymousSubComponentParserRuleCall_1_3(), currentNode); 
    }
    this_PrimitiveAnonymousSubComponent_4=rulePrimitiveAnonymousSubComponent
    { 
        $current = $this_PrimitiveAnonymousSubComponent_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getTemplateSubComponentParserRuleCall_1_4(), currentNode); 
    }
    this_TemplateSubComponent_5=ruleTemplateSubComponent
    { 
        $current = $this_TemplateSubComponent_5.current; 
        currentNode = currentNode.getParent();
    }
));





// Entry rule entryRuleCompositeReferenceDefinition
entryRuleCompositeReferenceDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeReferenceDefinitionRule(), currentNode); }
	 iv_ruleCompositeReferenceDefinition=ruleCompositeReferenceDefinition 
	 { $current=$iv_ruleCompositeReferenceDefinition.current; } 
	 EOF 
;

// Rule CompositeReferenceDefinition
ruleCompositeReferenceDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getReferenceNameFullyQualifiedNameParserRuleCall_0_0(), currentNode); 
	    }
	    lv_referenceName_0=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "referenceName", lv_referenceName_0, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('<' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getLessThanSignKeyword_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_1_0(), currentNode); 
	    }
	    lv_templatesList_2=ruleTemplateDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "templatesList", lv_templatesList_2, "TemplateDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_1_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_2_1_0(), currentNode); 
	    }
	    lv_templatesList_4=ruleTemplateDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "templatesList", lv_templatesList_4, "TemplateDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'>' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getGreaterThanSignKeyword_1_3(), null); 
    }
)?('(' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_argumentsList_7=ruleArgumentDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "argumentsList", lv_argumentsList_7, "ArgumentDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_2_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_2_1_0(), currentNode); 
	    }
	    lv_argumentsList_9=ruleArgumentDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "argumentsList", lv_argumentsList_9, "ArgumentDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*')' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getRightParenthesisKeyword_2_3(), null); 
    }
)?);





// Entry rule entryRuleCompositeSubComponent
entryRuleCompositeSubComponent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeSubComponentRule(), currentNode); }
	 iv_ruleCompositeSubComponent=ruleCompositeSubComponent 
	 { $current=$iv_ruleCompositeSubComponent.current; } 
	 EOF 
;

// Rule CompositeSubComponent
ruleCompositeSubComponent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('composite' 
    {
        createLeafNode(grammarAccess.getCompositeSubComponentAccess().getCompositeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeSubComponentAccess().getCompositeReferenceDefinitionCompositeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_compositeReferenceDefinition_1=ruleCompositeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "compositeReferenceDefinition", lv_compositeReferenceDefinition_1, "CompositeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'as' 
    {
        createLeafNode(grammarAccess.getCompositeSubComponentAccess().getAsKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getCompositeSubComponentAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleCompositeAnonymousSubComponent
entryRuleCompositeAnonymousSubComponent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompositeAnonymousSubComponentRule(), currentNode); }
	 iv_ruleCompositeAnonymousSubComponent=ruleCompositeAnonymousSubComponent 
	 { $current=$iv_ruleCompositeAnonymousSubComponent.current; } 
	 EOF 
;

// Rule CompositeAnonymousSubComponent
ruleCompositeAnonymousSubComponent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('composite' 
    {
        createLeafNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getCompositeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getCompositeReferenceDefinitionCompositeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_compositeReferenceDefinition_1=ruleCompositeReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "compositeReferenceDefinition", lv_compositeReferenceDefinition_1, "CompositeReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?'as' 
    {
        createLeafNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getAsKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getCompositeElementsAnnotationsListParserRuleCall_5_0_0(), currentNode); 
	    }
	    lv_compositeElements_5=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_5, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getCompositeElementsCompositeDefinitionElementParserRuleCall_5_1_0(), currentNode); 
	    }
	    lv_compositeElements_6=ruleCompositeDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "compositeElements", lv_compositeElements_6, "CompositeDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getCompositeAnonymousSubComponentAccess().getRightCurlyBracketKeyword_6(), null); 
    }
);





// Entry rule entryRulePrimitiveReferenceDefinition
entryRulePrimitiveReferenceDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionRule(), currentNode); }
	 iv_rulePrimitiveReferenceDefinition=rulePrimitiveReferenceDefinition 
	 { $current=$iv_rulePrimitiveReferenceDefinition.current; } 
	 EOF 
;

// Rule PrimitiveReferenceDefinition
rulePrimitiveReferenceDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getReferenceNameFullyQualifiedNameParserRuleCall_0_0(), currentNode); 
	    }
	    lv_referenceName_0=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "referenceName", lv_referenceName_0, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('(' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getLeftParenthesisKeyword_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_1_0(), currentNode); 
	    }
	    lv_argumentsList_2=ruleArgumentDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "argumentsList", lv_argumentsList_2, "ArgumentDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getCommaKeyword_1_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_2_1_0(), currentNode); 
	    }
	    lv_argumentsList_4=ruleArgumentDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "argumentsList", lv_argumentsList_4, "ArgumentDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*')' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getRightParenthesisKeyword_1_3(), null); 
    }
)?);





// Entry rule entryRuleTemplateDefinition
entryRuleTemplateDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTemplateDefinitionRule(), currentNode); }
	 iv_ruleTemplateDefinition=ruleTemplateDefinition 
	 { $current=$iv_ruleTemplateDefinition.current; } 
	 EOF 
;

// Rule TemplateDefinition
ruleTemplateDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
	    lv_templateName_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getTemplateDefinitionAccess().getTemplateNameIDTerminalRuleCall_0_0_0(), "templateName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "templateName", lv_templateName_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getTemplateDefinitionAccess().getEqualsSignKeyword_0_1(), null); 
    }
)?((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTemplateDefinitionAccess().getTemplateValueFullyQualifiedNameParserRuleCall_1_0_0(), currentNode); 
	    }
	    lv_templateValue_2=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "templateValue", lv_templateValue_2, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |'?' 
    {
        createLeafNode(grammarAccess.getTemplateDefinitionAccess().getQuestionMarkKeyword_1_1(), null); 
    }
));





// Entry rule entryRuleTemplateSubComponent
entryRuleTemplateSubComponent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTemplateSubComponentRule(), currentNode); }
	 iv_ruleTemplateSubComponent=ruleTemplateSubComponent 
	 { $current=$iv_ruleTemplateSubComponent.current; } 
	 EOF 
;

// Rule TemplateSubComponent
ruleTemplateSubComponent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getTemplateSubComponentAccess().getTemplateReferenceDefinitionTemplateSpecifierCrossReference_0_0(), "templateReferenceDefinition"); 
	}

		// TODO assign feature to currentNode
	
)'as' 
    {
        createLeafNode(grammarAccess.getTemplateSubComponentAccess().getAsKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getTemplateSubComponentAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRulePrimitiveSubComponent
entryRulePrimitiveSubComponent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveSubComponentRule(), currentNode); }
	 iv_rulePrimitiveSubComponent=rulePrimitiveSubComponent 
	 { $current=$iv_rulePrimitiveSubComponent.current; } 
	 EOF 
;

// Rule PrimitiveSubComponent
rulePrimitiveSubComponent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('primitive' 
    {
        createLeafNode(grammarAccess.getPrimitiveSubComponentAccess().getPrimitiveKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveSubComponentAccess().getPrimitiveReferenceDefinitionPrimitiveReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_primitiveReferenceDefinition_1=rulePrimitiveReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "primitiveReferenceDefinition", lv_primitiveReferenceDefinition_1, "PrimitiveReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'as' 
    {
        createLeafNode(grammarAccess.getPrimitiveSubComponentAccess().getAsKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getPrimitiveSubComponentAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRulePrimitiveAnonymousSubComponent
entryRulePrimitiveAnonymousSubComponent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveAnonymousSubComponentRule(), currentNode); }
	 iv_rulePrimitiveAnonymousSubComponent=rulePrimitiveAnonymousSubComponent 
	 { $current=$iv_rulePrimitiveAnonymousSubComponent.current; } 
	 EOF 
;

// Rule PrimitiveAnonymousSubComponent
rulePrimitiveAnonymousSubComponent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('primitive' 
    {
        createLeafNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getPrimitiveKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getPrimitiveReferenceDefinitionPrimitiveReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
	    lv_primitiveReferenceDefinition_1=rulePrimitiveReferenceDefinition 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "primitiveReferenceDefinition", lv_primitiveReferenceDefinition_1, "PrimitiveReferenceDefinition", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?'as' 
    {
        createLeafNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getAsKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getPrimitiveElementsAnnotationsListParserRuleCall_5_0_0(), currentNode); 
	    }
	    lv_primitiveElements_5=ruleAnnotationsList 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_5, "AnnotationsList", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getPrimitiveElementsPrimitiveDefinitionElementParserRuleCall_5_1_0(), currentNode); 
	    }
	    lv_primitiveElements_6=rulePrimitiveDefinitionElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveAnonymousSubComponentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "primitiveElements", lv_primitiveElements_6, "PrimitiveDefinitionElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getPrimitiveAnonymousSubComponentAccess().getRightCurlyBracketKeyword_6(), null); 
    }
);





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAttributeDefinitionRule(), currentNode); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('attribute' 
    {
        createLeafNode(grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAttributeDefinitionAccess().getTypeAttributeTypeParserRuleCall_1_0(), currentNode); 
	    }
	    lv_type_1=ruleAttributeType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_1, "AttributeType", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    lv_attributeName_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getAttributeDefinitionAccess().getAttributeNameIDTerminalRuleCall_2_0(), "attributeName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "attributeName", lv_attributeName_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('=' 
    {
        createLeafNode(grammarAccess.getAttributeDefinitionAccess().getEqualsSignKeyword_3_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAttributeDefinitionAccess().getValueValueParserRuleCall_3_1_0(), currentNode); 
	    }
	    lv_value_4=ruleValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_4, "Value", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))?);





// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getArgumentDefinitionRule(), currentNode); }
	 iv_ruleArgumentDefinition=ruleArgumentDefinition 
	 { $current=$iv_ruleArgumentDefinition.current; } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
	    lv_argumentName_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getArgumentDefinitionAccess().getArgumentNameIDTerminalRuleCall_0_0_0(), "argumentName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "argumentName", lv_argumentName_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getArgumentDefinitionAccess().getEqualsSignKeyword_0_1(), null); 
    }
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_1_0(), currentNode); 
	    }
	    lv_argumentValue_2=ruleValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "argumentValue", lv_argumentValue_2, "Value", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleInterfaceDefinition
entryRuleInterfaceDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getInterfaceDefinitionRule(), currentNode); }
	 iv_ruleInterfaceDefinition=ruleInterfaceDefinition 
	 { $current=$iv_ruleInterfaceDefinition.current; } 
	 EOF 
;

// Rule InterfaceDefinition
ruleInterfaceDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getRoleRoleEnumRuleCall_0_0(), currentNode); 
	    }
	    lv_role_0=ruleRole 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "role", lv_role_0, "Role", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getSignatureFullyQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
	    lv_signature_1=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "signature", lv_signature_1, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?'as' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getAsKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)((	
	
	    lv_collection_4='[' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionLeftSquareBracketKeyword_4_0_0(), "collection"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collection", true, "[", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(	
	
	    lv_collectionsize_5=	RULE_INT
	{
		createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionsizeINTTerminalRuleCall_4_1_0(), "collectionsize"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collectionsize", lv_collectionsize_5, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    lv_collection_6=']' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionRightSquareBracketKeyword_4_2_0(), "collection"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collection", true, "]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getContingencyContingencyEnumRuleCall_5_0(), currentNode); 
	    }
	    lv_contingency_7=ruleContingency 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "contingency", lv_contingency_7, "Contingency", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?);





// Entry rule entryRuleBindingDefinition
entryRuleBindingDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getBindingDefinitionRule(), currentNode); }
	 iv_ruleBindingDefinition=ruleBindingDefinition 
	 { $current=$iv_ruleBindingDefinition.current; } 
	 EOF 
;

// Rule BindingDefinition
ruleBindingDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('binds' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getBindsKeyword_0(), null); 
    }
('this' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_0(), null); 
    }

    |(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceParentArchitectureDefinitionCrossReference_1_1_0(), "interfaceSourceParent"); 
	}

		// TODO assign feature to currentNode
	
))'.' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_2(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceInterfaceDefinitionCrossReference_3_0(), "interfaceSource"); 
	}

		// TODO assign feature to currentNode
	
)('[' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_4_0(), null); 
    }
(	
	
	    lv_interfaceSourceIndex_6=	RULE_INT
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceIndexINTTerminalRuleCall_4_1_0(), "interfaceSourceIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "interfaceSourceIndex", lv_interfaceSourceIndex_6, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_4_2(), null); 
    }
)?'to' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getToKeyword_5(), null); 
    }
('this' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getThisKeyword_6_0(), null); 
    }

    |(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetParentArchitectureDefinitionCrossReference_6_1_0(), "interfaceTargetParent"); 
	}

		// TODO assign feature to currentNode
	
))'.' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_7(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetInterfaceDefinitionCrossReference_8_0(), "interfaceTarget"); 
	}

		// TODO assign feature to currentNode
	
)('[' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_9_0(), null); 
    }
(	
	
	    lv_interfaceTargetIndex_14=	RULE_INT
	{
		createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetIndexINTTerminalRuleCall_9_1_0(), "interfaceTargetIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "interfaceTargetIndex", lv_interfaceTargetIndex_14, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_9_2(), null); 
    }
)?);





// Entry rule entryRuleDataDefinition
entryRuleDataDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDataDefinitionRule(), currentNode); }
	 iv_ruleDataDefinition=ruleDataDefinition 
	 { $current=$iv_ruleDataDefinition.current; } 
	 EOF 
;

// Rule DataDefinition
ruleDataDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(('data' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getDataKeyword_0_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getDataDefinitionAccess().getFileCFileCParserRuleCall_0_1_0_0(), currentNode); 
	    }
	    lv_fileC_1=ruleFileC 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "fileC", lv_fileC_1, "FileC", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |('{{' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0_1_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getDataDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_0_1_1_1_0(), currentNode); 
	    }
	    lv_inlineCcode_3=ruleInlineCodeC 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "inlineCcode", lv_inlineCcode_3, "InlineCodeC", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'}}' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getRightCurlyBracketRightCurlyBracketKeyword_0_1_1_2(), null); 
    }
)))
    |'nodata' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getNodataKeyword_1(), null); 
    }
);





// Entry rule entryRuleImplementationDefinition
entryRuleImplementationDefinition returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getImplementationDefinitionRule(), currentNode); }
	 iv_ruleImplementationDefinition=ruleImplementationDefinition 
	 { $current=$iv_ruleImplementationDefinition.current; } 
	 EOF 
;

// Rule ImplementationDefinition
ruleImplementationDefinition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('source' 
    {
        createLeafNode(grammarAccess.getImplementationDefinitionAccess().getSourceKeyword_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getImplementationDefinitionAccess().getFileCFileCParserRuleCall_1_0_0(), currentNode); 
	    }
	    lv_fileC_1=ruleFileC 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementationDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "fileC", lv_fileC_1, "FileC", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |('{{' 
    {
        createLeafNode(grammarAccess.getImplementationDefinitionAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getImplementationDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_1_1_1_0(), currentNode); 
	    }
	    lv_inlineCcode_3=ruleInlineCodeC 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementationDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "inlineCcode", lv_inlineCcode_3, "InlineCodeC", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'}}' 
    {
        createLeafNode(grammarAccess.getImplementationDefinitionAccess().getRightCurlyBracketRightCurlyBracketKeyword_1_1_2(), null); 
    }
)));





// Entry rule entryRuleTemplateSpecifier
entryRuleTemplateSpecifier returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTemplateSpecifierRule(), currentNode); }
	 iv_ruleTemplateSpecifier=ruleTemplateSpecifier 
	 { $current=$iv_ruleTemplateSpecifier.current; } 
	 EOF 
;

// Rule TemplateSpecifier
ruleTemplateSpecifier returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getTemplateSpecifierAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifierRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'conformsto' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifierAccess().getConformstoKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifierAccess().getComponentTypeNameFullyQualifiedNameParserRuleCall_2_0(), currentNode); 
	    }
	    lv_componentTypeName_2=ruleFullyQualifiedName 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifierRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "componentTypeName", lv_componentTypeName_2, "FullyQualifiedName", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleFullyQualifiedName
entryRuleFullyQualifiedName returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFullyQualifiedNameRule(), currentNode); } 
	 iv_ruleFullyQualifiedName=ruleFullyQualifiedName 
	 { $current=$iv_ruleFullyQualifiedName.current.getText(); }  
	 EOF 
;

// Rule FullyQualifiedName
ruleFullyQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getFullyQualifiedNameAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleFileC
entryRuleFileC returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFileCRule(), currentNode); }
	 iv_ruleFileC=ruleFileC 
	 { $current=$iv_ruleFileC.current; } 
	 EOF 
;

// Rule FileC
ruleFileC returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFileCAccess().getDirectoryPathParserRuleCall_0_0(), currentNode); 
	    }
	    lv_directory_0=rulePath 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFileCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "directory", lv_directory_0, "Path", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFileCAccess().getFileNameFilenameParserRuleCall_1_0(), currentNode); 
	    }
	    lv_fileName_1=ruleFilename 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFileCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "fileName", lv_fileName_1, "Filename", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleFilename
entryRuleFilename returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFilenameRule(), currentNode); } 
	 iv_ruleFilename=ruleFilename 
	 { $current=$iv_ruleFilename.current.getText(); }  
	 EOF 
;

// Rule Filename
ruleFilename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_0(), null); 
    }

	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getFilenameAccess().getFullStopKeyword_1(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getFilenameAccess().getIDTerminalRuleCall_2(), null); 
    }
)
    ;





// Entry rule entryRuleInlineCodeC
entryRuleInlineCodeC returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getInlineCodeCRule(), currentNode); }
	 iv_ruleInlineCodeC=ruleInlineCodeC 
	 { $current=$iv_ruleInlineCodeC.current; } 
	 EOF 
;

// Rule InlineCodeC
ruleInlineCodeC returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getInlineCodeCAccess().getCodeCCodeCParserRuleCall_0(), currentNode); 
	    }
	    lv_codeC_0=ruleCodeC 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlineCodeCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "codeC", lv_codeC_0, "CodeC", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
);





// Entry rule entryRuleAnnotationsList
entryRuleAnnotationsList returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationsListRule(), currentNode); }
	 iv_ruleAnnotationsList=ruleAnnotationsList 
	 { $current=$iv_ruleAnnotationsList.current; } 
	 EOF 
;

// Rule AnnotationsList
ruleAnnotationsList returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_0_0(), currentNode); 
	    }
	    lv_annotations_0=ruleAnnotation 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "annotations", lv_annotations_0, "Annotation", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_1_0(), currentNode); 
	    }
	    lv_annotations_1=ruleAnnotation 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "annotations", lv_annotations_1, "Annotation", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*);





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationRule(), currentNode); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('@' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getNameAnnotationTypeParserRuleCall_1_0(), currentNode); 
	    }
	    lv_name_1=ruleAnnotationType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "AnnotationType", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('(' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_annotationElements_3=ruleAnnotationElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "annotationElements", lv_annotationElements_3, "AnnotationElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_2_1_0(), currentNode); 
	    }
	    lv_annotationElements_5=ruleAnnotationElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "annotationElements", lv_annotationElements_5, "AnnotationElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*')' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3(), null); 
    }
)?);





// Entry rule entryRuleAnnotationElement
entryRuleAnnotationElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationElementRule(), currentNode); }
	 iv_ruleAnnotationElement=ruleAnnotationElement 
	 { $current=$iv_ruleAnnotationElement.current; } 
	 EOF 
;

// Rule AnnotationElement
ruleAnnotationElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
	    lv_elementName_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getAnnotationElementAccess().getElementNameIDTerminalRuleCall_0_0_0(), "elementName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "elementName", lv_elementName_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_0_1(), null); 
    }
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_1_0(), currentNode); 
	    }
	    lv_elementValue_2=ruleElementValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "elementValue", lv_elementValue_2, "ElementValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleElementValue
entryRuleElementValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getElementValueRule(), currentNode); }
	 iv_ruleElementValue=ruleElementValue 
	 { $current=$iv_ruleElementValue.current; } 
	 EOF 
;

// Rule ElementValue
ruleElementValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getConstantValueParserRuleCall_0(), currentNode); 
    }
    this_ConstantValue_0=ruleConstantValue
    { 
        $current = $this_ConstantValue_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_1(), currentNode); 
    }
    this_Annotation_1=ruleAnnotation
    { 
        $current = $this_Annotation_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_2(), currentNode); 
    }
    this_ElementValueArrayInitializer_2=ruleElementValueArrayInitializer
    { 
        $current = $this_ElementValueArrayInitializer_2.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getConstantValueRule(), currentNode); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getConstantValueAccess().getValueConstantFormatParserRuleCall_0(), currentNode); 
	    }
	    lv_value_0=ruleConstantFormat 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_0, "ConstantFormat", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
);





// Entry rule entryRuleConstantFormat
entryRuleConstantFormat returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getConstantFormatRule(), currentNode); } 
	 iv_ruleConstantFormat=ruleConstantFormat 
	 { $current=$iv_ruleConstantFormat.current.getText(); }  
	 EOF 
;

// Rule ConstantFormat
ruleConstantFormat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    createLeafNode(grammarAccess.getConstantFormatAccess().getINTTerminalRuleCall_0(), null); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    createLeafNode(grammarAccess.getConstantFormatAccess().getSTRINGTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleElementValueArrayInitializer
entryRuleElementValueArrayInitializer returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getElementValueArrayInitializerRule(), currentNode); }
	 iv_ruleElementValueArrayInitializer=ruleElementValueArrayInitializer 
	 { $current=$iv_ruleElementValueArrayInitializer.current; } 
	 EOF 
;

// Rule ElementValueArrayInitializer
ruleElementValueArrayInitializer returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('{' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_1_0(), currentNode); 
	    }
	    lv_values_1=ruleElementValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueArrayInitializerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "values", lv_values_1, "ElementValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_values_3=ruleElementValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueArrayInitializerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "values", lv_values_3, "ElementValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_3(), null); 
    }
);





// Entry rule entryRuleCodeC
entryRuleCodeC returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCodeCRule(), currentNode); } 
	 iv_ruleCodeC=ruleCodeC 
	 { $current=$iv_ruleCodeC.current.getText(); }  
	 EOF 
;

// Rule CodeC
ruleCodeC returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getCodeCAccess().getIDTerminalRuleCall_0(), null); 
    }

    |
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getColonKeyword_1(), null); 
    }

    |
	kw=',' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getCommaKeyword_2(), null); 
    }

    |
	kw='?' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getQuestionMarkKeyword_3(), null); 
    }

    |
	kw=';' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getSemicolonKeyword_4(), null); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getFullStopKeyword_5(), null); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getSolidusKeyword_6(), null); 
    }

    |
	kw='\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getReverseSolidusKeyword_7(), null); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getExclamationMarkKeyword_8(), null); 
    }

    |
	kw='@' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getCommercialAtKeyword_9(), null); 
    }

    |
	kw='\"' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getQuotationMarkKeyword_10(), null); 
    }

    |
	kw='\'' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getApostropheKeyword_11(), null); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCodeCAccess().getAsteriskKeyword_12(), null); 
    }
)*
    ;





// Entry rule entryRulePath
entryRulePath returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPathRule(), currentNode); } 
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current.getText(); }  
	 EOF 
;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getPathAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getColonKeyword_1(), null); 
    }
)?((
	kw='\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getReverseSolidusKeyword_2_0_0(), null); 
    }

    |
	kw='\\\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getReverseSolidusReverseSolidusKeyword_2_0_1(), null); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_2_0_2(), null); 
    }
)    this_ID_5=RULE_ID    {
		$current.merge(this_ID_5);
    }

    { 
    createLeafNode(grammarAccess.getPathAccess().getIDTerminalRuleCall_2_1(), null); 
    }
)*(
	kw='\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getReverseSolidusKeyword_3_0(), null); 
    }

    |
	kw='\\\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getReverseSolidusReverseSolidusKeyword_3_1(), null); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getPathAccess().getSolidusKeyword_3_2(), null); 
    }
))
    ;





// Entry rule entryRuleValue
entryRuleValue returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getValueRule(), currentNode); } 
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current.getText(); }  
	 EOF 
;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getValueAccess().getIDTerminalRuleCall_0(), null); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getValueAccess().getINTTerminalRuleCall_1(), null); 
    }

    |    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    createLeafNode(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2(), null); 
    }
)
    ;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationTypeRule(), currentNode); } 
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current.getText(); }  
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(
	kw='override' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getOverrideKeyword_0(), null); 
    }

    |
	kw='singleton' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getSingletonKeyword_1(), null); 
    }

    |
	kw='LDFlags' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getLDFlagsKeyword_2(), null); 
    }

    |
	kw='CFlags' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getCFlagsKeyword_3(), null); 
    }

    |    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    createLeafNode(grammarAccess.getAnnotationTypeAccess().getIDTerminalRuleCall_4(), null); 
    }
)
    ;





// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAttributeTypeRule(), currentNode); } 
	 iv_ruleAttributeType=ruleAttributeType 
	 { $current=$iv_ruleAttributeType.current.getText(); }  
	 EOF 
;

// Rule AttributeType
ruleAttributeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(
	kw='STRUCT' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getSTRUCTKeyword_0(), null); 
    }

    |
	kw='UNION' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getUNIONKeyword_1(), null); 
    }

    |
	kw='ENUM' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getENUMKeyword_2(), null); 
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    createLeafNode(grammarAccess.getAttributeTypeAccess().getIDTerminalRuleCall_3(), null); 
    }
)
    ;





// Rule Contingency
ruleContingency returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'optional' 
	{
        $current = grammarAccess.getContingencyAccess().getOptionalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getContingencyAccess().getOptionalEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'mandatory' 
	{
        $current = grammarAccess.getContingencyAccess().getMandatoryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getContingencyAccess().getMandatoryEnumLiteralDeclaration_1(), null); 
    }
));



// Rule Role
ruleRole returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'provides' 
	{
        $current = grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'requires' 
	{
        $current = grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


