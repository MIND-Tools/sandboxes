/*
 * generated by Xtext
 */
package org.ow2.fractal.mind.xtext.formatting;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class FractalFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		org.ow2.fractal.mind.xtext.services.FractalGrammarAccess f = (org.ow2.fractal.mind.xtext.services.FractalGrammarAccess) getGrammarAccess();

		//define indentation space
		c.setIndentationSpace("    ");		
		
		// define an indentation degree of the code in the composite bracket
		c.setIndentation( f.getCompositeComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(),
				f.getCompositeComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2());

		//add line break after the opening bracket
		c.setLinewrap().after(f.getCompositeComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0());
		//add line break before the closing bracket
		c.setLinewrap().before(f.getCompositeComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2());
		
		// define an indentation degree of the code in the SubComposite bracket
//		c.setIndentation( f.getCompositeSubComponentAccess().getAnonymousLeftCurlyBracketKeyword_4_0(),
//				f.getCompositeSubComponentAccess().getAnonymousRightCurlyBracketKeyword_6_0());
		
//		c.setLinewrap().after(f.getCompositeSubComponentAccess().getAnonymousLeftCurlyBracketKeyword_4_0());
//		c.setLinewrap().before(f.getCompositeSubComponentAccess().getAnonymousRightCurlyBracketKeyword_6_0());
		
		//primitive
		c.setIndentation( f.getPrimitiveComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(),
				f.getPrimitiveComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2());
		
		c.setLinewrap().after(f.getPrimitiveComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0());
		c.setLinewrap().before(f.getPrimitiveComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2());
		//c.setLinewrap(2).before(f.getPrimitiveComponentDefinitionAccess().getPrimitiveKeyword_1());
		
		//Sub primitive		
//		c.setIndentation( f.getPrimitiveSubComponentAccess().getAnonymousLeftCurlyBracketKeyword_4_0(),
//				f.getPrimitiveSubComponentAccess().getAnonymousRightCurlyBracketKeyword_6_0());
		
//		c.setLinewrap().after( f.getPrimitiveSubComponentAccess().getAnonymousLeftCurlyBracketKeyword_4_0());
//		c.setLinewrap().before(f.getPrimitiveSubComponentAccess().getAnonymousRightCurlyBracketKeyword_6_0());
		
		
		//to avoid space after @
		c.setNoSpace().after(f.getAnnotationAccess().getCommercialAtKeyword_0());
		
		
		c.setLinewrap().after(f.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_3_0());
		
		
//		c.setLinewrap().after(f.getBindingDefinitionAccess().getInterfaceTargetNameInterfaceDefinitionIDTerminalRuleCall_8_0_1());
		c.setLinewrap().after(f.getBindingDefinitionAccess().getInterfaceTargetAssignment_8());

		
		//break line after import
		c.setLinewrap().after(f.getImportDefinitionAccess().getSemicolonKeyword_3());
		c.setNoSpace().around(f.getImportDefinitionAccess().getFullStopAsteriskKeyword_2());
		c.setNoSpace().before(f.getImportDefinitionAccess().getSemicolonKeyword_3());
		
		
		//add line break after data and source
		c.setLinewrap().after(f.getImplementationDefinitionAccess().getRightCurlyBracketRightCurlyBracketKeyword_1_1_2());
		c.setLinewrap().after(f.getFilenameAccess().getIDTerminalRuleCall_2());
		c.setNoSpace().around(f.getFilenameAccess().getFullStopKeyword_1());
		
		//add line break after annotation rule
		c.setLinewrap().after(f.getAnnotationAccess().getRightParenthesisKeyword_2_3());
		
		c.setLinewrap().after(f.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_1_0());
		
		//to avoid spaces around "." for fully Qualified Name Rule
		c.setNoSpace().around(f.getFullyQualifiedNameAccess().getFullStopKeyword_1_0());
		
		//to avoid spaces around "." for binding rule
		c.setNoSpace().around(f.getBindingDefinitionAccess().getFullStopKeyword_2());
		c.setNoSpace().around(f.getBindingDefinitionAccess().getFullStopKeyword_7());
		
	}
}
