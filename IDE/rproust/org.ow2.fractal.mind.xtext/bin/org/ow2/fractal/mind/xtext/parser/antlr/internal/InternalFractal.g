/*
* generated by Xtext
*/
grammar InternalFractal;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.ow2.fractal.mind.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ow2.fractal.mind.xtext.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.ow2.fractal.mind.xtext.services.FractalGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private FractalGrammarAccess grammarAccess;
 	
    public InternalFractalParser(TokenStream input, IAstFactory factory, FractalGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/ow2/fractal/mind/xtext/parser/antlr/internal/InternalFractal.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AdlDefinition";	
   	}
   	
   	@Override
   	protected FractalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAdlDefinition
entryRuleAdlDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAdlDefinitionRule(), currentNode); }
	 iv_ruleAdlDefinition=ruleAdlDefinition 
	 { $current=$iv_ruleAdlDefinition.current; } 
	 EOF 
;

// Rule AdlDefinition
ruleAdlDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getImportsImportDefinitionParserRuleCall_0_0(), currentNode); 
	    }
		lv_imports_0_0=ruleImportDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"imports",
	        		lv_imports_0_0, 
	        		"ImportDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_1_0(), currentNode); 
	    }
		lv_annotationsList_1_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_1_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdlDefinitionAccess().getArchitecturedefinitionArchitectureDefinitionParserRuleCall_2_0(), currentNode); 
	    }
		lv_architecturedefinition_2_0=ruleArchitectureDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdlDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"architecturedefinition",
	        		lv_architecturedefinition_2_0, 
	        		"ArchitectureDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportDefinitionRule(), currentNode); }
	 iv_ruleImportDefinition=ruleImportDefinition 
	 { $current=$iv_ruleImportDefinition.current; } 
	 EOF 
;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'import' 
    {
        createLeafNode(grammarAccess.getImportDefinitionAccess().getImportKeyword_0(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportDefinitionAccess().getImportNameFQNParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_importName_1_1=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importName",
	        		lv_importName_1_1, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportDefinitionAccess().getImportNameFULL_IMPORT_NAMEParserRuleCall_1_0_1(), currentNode); 
	    }
		lv_importName_1_2=ruleFULL_IMPORT_NAME		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"importName",
	        		lv_importName_1_2, 
	        		"FULL_IMPORT_NAME", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)	';' 
    {
        createLeafNode(grammarAccess.getImportDefinitionAccess().getSemicolonKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleArchitectureDefinition
entryRuleArchitectureDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArchitectureDefinitionRule(), currentNode); }
	 iv_ruleArchitectureDefinition=ruleArchitectureDefinition 
	 { $current=$iv_ruleArchitectureDefinition.current; } 
	 EOF 
;

// Rule ArchitectureDefinition
ruleArchitectureDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getComponentTypeDefinitionParserRuleCall_0(), currentNode); 
    }
    this_ComponentTypeDefinition_0=ruleComponentTypeDefinition
    { 
        $current = $this_ComponentTypeDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getPrimitiveComponentDefinitionParserRuleCall_1(), currentNode); 
    }
    this_PrimitiveComponentDefinition_1=rulePrimitiveComponentDefinition
    { 
        $current = $this_PrimitiveComponentDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getArchitectureDefinitionAccess().getCompositeComponentDefinitionParserRuleCall_2(), currentNode); 
    }
    this_CompositeComponentDefinition_2=ruleCompositeComponentDefinition
    { 
        $current = $this_CompositeComponentDefinition_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRulePrimitiveComponentDefinition
entryRulePrimitiveComponentDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionRule(), currentNode); }
	 iv_rulePrimitiveComponentDefinition=rulePrimitiveComponentDefinition 
	 { $current=$iv_rulePrimitiveComponentDefinition.current; } 
	 EOF 
;

// Rule PrimitiveComponentDefinition
rulePrimitiveComponentDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_abstract_0_0=	'abstract' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getAbstractAbstractKeyword_0_0(), "abstract"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "abstract", true, "abstract", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'primitive' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getNameFQNParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getPrimitiveFormalArgumentsListFormalArgumentsListParserRuleCall_3_0(), currentNode); 
	    }
		lv_primitiveFormalArgumentsList_3_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"primitiveFormalArgumentsList",
	        		lv_primitiveFormalArgumentsList_3_0, 
	        		"FormalArgumentsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getReferencesListPrimitiveReferencesListParserRuleCall_4_0(), currentNode); 
	    }
		lv_referencesList_4_0=rulePrimitiveReferencesList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencesList",
	        		lv_referencesList_4_0, 
	        		"PrimitiveReferencesList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((	'{' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getBodyPrimitiveBodyParserRuleCall_5_0_1_0(), currentNode); 
	    }
		lv_body_6_0=rulePrimitiveBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_6_0, 
	        		"PrimitiveBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'}' 
    {
        createLeafNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveComponentDefinitionAccess().getBodyPrimitiveBodyParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_body_8_0=rulePrimitiveBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_8_0, 
	        		"PrimitiveBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRulePrimitiveDefinitionElement
entryRulePrimitiveDefinitionElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveDefinitionElementRule(), currentNode); }
	 iv_rulePrimitiveDefinitionElement=rulePrimitiveDefinitionElement 
	 { $current=$iv_rulePrimitiveDefinitionElement.current; } 
	 EOF 
;

// Rule PrimitiveDefinitionElement
rulePrimitiveDefinitionElement returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_0(), currentNode); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getAttributeDefinitionParserRuleCall_1(), currentNode); 
    }
    this_AttributeDefinition_1=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getDataDefinitionParserRuleCall_2(), currentNode); 
    }
    this_DataDefinition_2=ruleDataDefinition
    { 
        $current = $this_DataDefinition_2.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getPrimitiveDefinitionElementAccess().getImplementationDefinitionParserRuleCall_3(), currentNode); 
    }
    this_ImplementationDefinition_3=ruleImplementationDefinition
    { 
        $current = $this_ImplementationDefinition_3.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleComponentTypeDefinition
entryRuleComponentTypeDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getComponentTypeDefinitionRule(), currentNode); }
	 iv_ruleComponentTypeDefinition=ruleComponentTypeDefinition 
	 { $current=$iv_ruleComponentTypeDefinition.current; } 
	 EOF 
;

// Rule ComponentTypeDefinition
ruleComponentTypeDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'type' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getTypeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getNameFQNParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getReferencesListTypeReferencesListParserRuleCall_2_0(), currentNode); 
	    }
		lv_referencesList_2_0=ruleTypeReferencesList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencesList",
	        		lv_referencesList_2_0, 
	        		"TypeReferencesList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((	'{' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getLeftCurlyBracketKeyword_3_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getBodyTypeBodyParserRuleCall_3_0_1_0(), currentNode); 
	    }
		lv_body_4_0=ruleTypeBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_4_0, 
	        		"TypeBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'}' 
    {
        createLeafNode(grammarAccess.getComponentTypeDefinitionAccess().getRightCurlyBracketKeyword_3_0_2(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getComponentTypeDefinitionAccess().getBodyTypeBodyParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_body_6_0=ruleTypeBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getComponentTypeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_6_0, 
	        		"TypeBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleTypeReferenceDefinition
entryRuleTypeReferenceDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferenceDefinitionRule(), currentNode); }
	 iv_ruleTypeReferenceDefinition=ruleTypeReferenceDefinition 
	 { $current=$iv_ruleTypeReferenceDefinition.current; } 
	 EOF 
;

// Rule TypeReferenceDefinition
ruleTypeReferenceDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0(), currentNode); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referenceName",
	        		lv_referenceName_0_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleTypeDefinitionElement
entryRuleTypeDefinitionElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeDefinitionElementRule(), currentNode); }
	 iv_ruleTypeDefinitionElement=ruleTypeDefinitionElement 
	 { $current=$iv_ruleTypeDefinitionElement.current; } 
	 EOF 
;

// Rule TypeDefinitionElement
ruleTypeDefinitionElement returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getTypeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall(), currentNode); 
    }
    this_InterfaceDefinition_0=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleCompositeComponentDefinition
entryRuleCompositeComponentDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompositeComponentDefinitionRule(), currentNode); }
	 iv_ruleCompositeComponentDefinition=ruleCompositeComponentDefinition 
	 { $current=$iv_ruleCompositeComponentDefinition.current; } 
	 EOF 
;

// Rule CompositeComponentDefinition
ruleCompositeComponentDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'composite' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getNameFQNParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getTemplateSpecifiersListTemplateSpecifiersListParserRuleCall_2_0(), currentNode); 
	    }
		lv_templateSpecifiersList_2_0=ruleTemplateSpecifiersList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"templateSpecifiersList",
	        		lv_templateSpecifiersList_2_0, 
	        		"TemplateSpecifiersList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getCompositeFormalArgumentsListFormalArgumentsListParserRuleCall_3_0(), currentNode); 
	    }
		lv_compositeFormalArgumentsList_3_0=ruleFormalArgumentsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"compositeFormalArgumentsList",
	        		lv_compositeFormalArgumentsList_3_0, 
	        		"FormalArgumentsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getReferencesListCompositeReferencesListParserRuleCall_4_0(), currentNode); 
	    }
		lv_referencesList_4_0=ruleCompositeReferencesList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencesList",
	        		lv_referencesList_4_0, 
	        		"CompositeReferencesList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((	'{' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getBodyCompositeBodyParserRuleCall_5_0_1_0(), currentNode); 
	    }
		lv_body_6_0=ruleCompositeBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_6_0, 
	        		"CompositeBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'}' 
    {
        createLeafNode(grammarAccess.getCompositeComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_2(), null); 
    }
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeComponentDefinitionAccess().getBodyCompositeBodyParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_body_8_0=ruleCompositeBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_8_0, 
	        		"CompositeBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleTemplateSpecifiersList
entryRuleTemplateSpecifiersList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTemplateSpecifiersListRule(), currentNode); }
	 iv_ruleTemplateSpecifiersList=ruleTemplateSpecifiersList 
	 { $current=$iv_ruleTemplateSpecifiersList.current; } 
	 EOF 
;

// Rule TemplateSpecifiersList
ruleTemplateSpecifiersList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'<' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getLessThanSignKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_templateSpecifiers_1_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifiersListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"templateSpecifiers",
	        		lv_templateSpecifiers_1_0, 
	        		"TemplateSpecifier", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getCommaKeyword_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifiersListAccess().getTemplateSpecifiersTemplateSpecifierParserRuleCall_1_1_1_0(), currentNode); 
	    }
		lv_templateSpecifiers_3_0=ruleTemplateSpecifier		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifiersListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"templateSpecifiers",
	        		lv_templateSpecifiers_3_0, 
	        		"TemplateSpecifier", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)	'>' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifiersListAccess().getGreaterThanSignKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleFormalArgumentsList
entryRuleFormalArgumentsList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFormalArgumentsListRule(), currentNode); }
	 iv_ruleFormalArgumentsList=ruleFormalArgumentsList 
	 { $current=$iv_ruleFormalArgumentsList.current; } 
	 EOF 
;

// Rule FormalArgumentsList
ruleFormalArgumentsList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getLeftParenthesisKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_formalArguments_1_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"formalArguments",
	        		lv_formalArguments_1_0, 
	        		"FormalArgument", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getCommaKeyword_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFormalArgumentsListAccess().getFormalArgumentsFormalArgumentParserRuleCall_1_1_1_0(), currentNode); 
	    }
		lv_formalArguments_3_0=ruleFormalArgument		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"formalArguments",
	        		lv_formalArguments_3_0, 
	        		"FormalArgument", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)	')' 
    {
        createLeafNode(grammarAccess.getFormalArgumentsListAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRulePrimitiveReferencesList
entryRulePrimitiveReferencesList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveReferencesListRule(), currentNode); }
	 iv_rulePrimitiveReferencesList=rulePrimitiveReferencesList 
	 { $current=$iv_rulePrimitiveReferencesList.current; } 
	 EOF 
;

// Rule PrimitiveReferencesList
rulePrimitiveReferencesList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'extends' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getReferencesPrimitiveReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
		lv_references_1_0=rulePrimitiveReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_1_0, 
	        		"PrimitiveReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferencesListAccess().getReferencesPrimitiveReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_references_3_0=rulePrimitiveReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_3_0, 
	        		"PrimitiveReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleCompositeReferencesList
entryRuleCompositeReferencesList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompositeReferencesListRule(), currentNode); }
	 iv_ruleCompositeReferencesList=ruleCompositeReferencesList 
	 { $current=$iv_ruleCompositeReferencesList.current; } 
	 EOF 
;

// Rule CompositeReferencesList
ruleCompositeReferencesList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'extends' 
    {
        createLeafNode(grammarAccess.getCompositeReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferencesListAccess().getReferencesCompositeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
		lv_references_1_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_1_0, 
	        		"CompositeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCompositeReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferencesListAccess().getReferencesCompositeReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_references_3_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_3_0, 
	        		"CompositeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleTypeReferencesList
entryRuleTypeReferencesList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferencesListRule(), currentNode); }
	 iv_ruleTypeReferencesList=ruleTypeReferencesList 
	 { $current=$iv_ruleTypeReferencesList.current; } 
	 EOF 
;

// Rule TypeReferencesList
ruleTypeReferencesList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'extends' 
    {
        createLeafNode(grammarAccess.getTypeReferencesListAccess().getExtendsKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferencesListAccess().getReferencesTypeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
		lv_references_1_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_1_0, 
	        		"TypeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getTypeReferencesListAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeReferencesListAccess().getReferencesTypeReferenceDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_references_3_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferencesListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"references",
	        		lv_references_3_0, 
	        		"TypeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleFormalArgument
entryRuleFormalArgument returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFormalArgumentRule(), currentNode); }
	 iv_ruleFormalArgument=ruleFormalArgument 
	 { $current=$iv_ruleFormalArgument.current; } 
	 EOF 
;

// Rule FormalArgument
ruleFormalArgument returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_name_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getFormalArgumentAccess().getNameIDTerminalRuleCall_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormalArgumentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleCompositeDefinitionElement
entryRuleCompositeDefinitionElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompositeDefinitionElementRule(), currentNode); }
	 iv_ruleCompositeDefinitionElement=ruleCompositeDefinitionElement 
	 { $current=$iv_ruleCompositeDefinitionElement.current; } 
	 EOF 
;

// Rule CompositeDefinitionElement
ruleCompositeDefinitionElement returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getSubComponentDefinitionParserRuleCall_0(), currentNode); 
    }
    this_SubComponentDefinition_0=ruleSubComponentDefinition
    { 
        $current = $this_SubComponentDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getInterfaceDefinitionParserRuleCall_1(), currentNode); 
    }
    this_InterfaceDefinition_1=ruleInterfaceDefinition
    { 
        $current = $this_InterfaceDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getCompositeDefinitionElementAccess().getBindingDefinitionParserRuleCall_2(), currentNode); 
    }
    this_BindingDefinition_2=ruleBindingDefinition
    { 
        $current = $this_BindingDefinition_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleSubComponentDefinition
entryRuleSubComponentDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSubComponentDefinitionRule(), currentNode); }
	 iv_ruleSubComponentDefinition=ruleSubComponentDefinition 
	 { $current=$iv_ruleSubComponentDefinition.current; } 
	 EOF 
;

// Rule SubComponentDefinition
ruleSubComponentDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'contains' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getContainsKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getReferenceDefinitionComponentReferenceParserRuleCall_2_0(), currentNode); 
	    }
		lv_referenceDefinition_2_0=ruleComponentReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referenceDefinition",
	        		lv_referenceDefinition_2_0, 
	        		"ComponentReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'as' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getAsKeyword_3(), null); 
    }
(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(((
(
		lv_anonymous_5_0=	'composite' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getAnonymousCompositeKeyword_5_0_0_0(), "anonymous"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "anonymous", true, "composite", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getBodyCompositeBodyParserRuleCall_5_0_2_0(), currentNode); 
	    }
		lv_body_7_0=ruleCompositeBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_7_0, 
	        		"CompositeBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getRightCurlyBracketKeyword_5_0_3(), null); 
    }
)
    |((
(
		lv_anonymous_9_0=	'primitive' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getAnonymousPrimitiveKeyword_5_1_0_0(), "anonymous"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "anonymous", true, "primitive", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getLeftCurlyBracketKeyword_5_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSubComponentDefinitionAccess().getBodyPrimitiveBodyParserRuleCall_5_1_2_0(), currentNode); 
	    }
		lv_body_11_0=rulePrimitiveBody		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSubComponentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"body",
	        		lv_body_11_0, 
	        		"PrimitiveBody", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getSubComponentDefinitionAccess().getRightCurlyBracketKeyword_5_1_3(), null); 
    }
))?)
;







// Entry rule entryRuleCompositeBody
entryRuleCompositeBody returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompositeBodyRule(), currentNode); }
	 iv_ruleCompositeBody=ruleCompositeBody 
	 { $current=$iv_ruleCompositeBody.current; } 
	 EOF 
;

// Rule CompositeBody
ruleCompositeBody returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeBodyAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeBodyAccess().getElementsCompositeDefinitionElementParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_elements_1_0=ruleCompositeDefinitionElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_1_0, 
	        		"CompositeDefinitionElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getCompositeBodyAccess().getSemicolonKeyword_1_1(), null); 
    }
)?)*)
;





// Entry rule entryRulePrimitiveBody
entryRulePrimitiveBody returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveBodyRule(), currentNode); }
	 iv_rulePrimitiveBody=rulePrimitiveBody 
	 { $current=$iv_rulePrimitiveBody.current; } 
	 EOF 
;

// Rule PrimitiveBody
rulePrimitiveBody returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveBodyAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveBodyAccess().getElementsPrimitiveDefinitionElementParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_elements_1_0=rulePrimitiveDefinitionElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_1_0, 
	        		"PrimitiveDefinitionElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getPrimitiveBodyAccess().getSemicolonKeyword_1_1(), null); 
    }
)?)*)
;





// Entry rule entryRuleTypeBody
entryRuleTypeBody returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeBodyRule(), currentNode); }
	 iv_ruleTypeBody=ruleTypeBody 
	 { $current=$iv_ruleTypeBody.current; } 
	 EOF 
;

// Rule TypeBody
ruleTypeBody returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeBodyAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTypeBodyAccess().getElementsTypeDefinitionElementParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_elements_1_0=ruleTypeDefinitionElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeBodyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elements",
	        		lv_elements_1_0, 
	        		"TypeDefinitionElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	';' 
    {
        createLeafNode(grammarAccess.getTypeBodyAccess().getSemicolonKeyword_1_1(), null); 
    }
)?)*)
;







// Entry rule entryRuleComponentReference
entryRuleComponentReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getComponentReferenceRule(), currentNode); }
	 iv_ruleComponentReference=ruleComponentReference 
	 { $current=$iv_ruleComponentReference.current; } 
	 EOF 
;

// Rule ComponentReference
ruleComponentReference returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getComponentReferenceAccess().getCompositeReferenceDefinitionParserRuleCall_0(), currentNode); 
    }
    this_CompositeReferenceDefinition_0=ruleCompositeReferenceDefinition
    { 
        $current = $this_CompositeReferenceDefinition_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getComponentReferenceAccess().getPrimitiveReferenceDefinitionParserRuleCall_1(), currentNode); 
    }
    this_PrimitiveReferenceDefinition_1=rulePrimitiveReferenceDefinition
    { 
        $current = $this_PrimitiveReferenceDefinition_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getComponentReferenceAccess().getTypeReferenceDefinitionParserRuleCall_2(), currentNode); 
    }
    this_TypeReferenceDefinition_2=ruleTypeReferenceDefinition
    { 
        $current = $this_TypeReferenceDefinition_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleCompositeReferenceDefinition
entryRuleCompositeReferenceDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCompositeReferenceDefinitionRule(), currentNode); }
	 iv_ruleCompositeReferenceDefinition=ruleCompositeReferenceDefinition 
	 { $current=$iv_ruleCompositeReferenceDefinition.current; } 
	 EOF 
;

// Rule CompositeReferenceDefinition
ruleCompositeReferenceDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0_0(), currentNode); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referenceName",
	        		lv_referenceName_0_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'<' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getLessThanSignKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_templatesList_2_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"templatesList",
	        		lv_templatesList_2_0, 
	        		"TemplateDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getTemplatesListTemplateDefinitionParserRuleCall_1_2_1_0(), currentNode); 
	    }
		lv_templatesList_4_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"templatesList",
	        		lv_templatesList_4_0, 
	        		"TemplateDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'>' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getGreaterThanSignKeyword_1_3(), null); 
    }
)?(	'(' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_argumentsList_7_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"argumentsList",
	        		lv_argumentsList_7_0, 
	        		"ArgumentDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getCommaKeyword_2_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCompositeReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_argumentsList_9_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompositeReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"argumentsList",
	        		lv_argumentsList_9_0, 
	        		"ArgumentDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	')' 
    {
        createLeafNode(grammarAccess.getCompositeReferenceDefinitionAccess().getRightParenthesisKeyword_2_3(), null); 
    }
)?)
;





// Entry rule entryRulePrimitiveReferenceDefinition
entryRulePrimitiveReferenceDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionRule(), currentNode); }
	 iv_rulePrimitiveReferenceDefinition=rulePrimitiveReferenceDefinition 
	 { $current=$iv_rulePrimitiveReferenceDefinition.current; } 
	 EOF 
;

// Rule PrimitiveReferenceDefinition
rulePrimitiveReferenceDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getReferenceNameFQNParserRuleCall_0_0(), currentNode); 
	    }
		lv_referenceName_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referenceName",
	        		lv_referenceName_0_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getLeftParenthesisKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_argumentsList_2_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"argumentsList",
	        		lv_argumentsList_2_0, 
	        		"ArgumentDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getCommaKeyword_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getArgumentsListArgumentDefinitionParserRuleCall_1_2_1_0(), currentNode); 
	    }
		lv_argumentsList_4_0=ruleArgumentDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPrimitiveReferenceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"argumentsList",
	        		lv_argumentsList_4_0, 
	        		"ArgumentDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	')' 
    {
        createLeafNode(grammarAccess.getPrimitiveReferenceDefinitionAccess().getRightParenthesisKeyword_1_3(), null); 
    }
)?)
;





// Entry rule entryRuleTemplateDefinition
entryRuleTemplateDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTemplateDefinitionRule(), currentNode); }
	 iv_ruleTemplateDefinition=ruleTemplateDefinition 
	 { $current=$iv_ruleTemplateDefinition.current; } 
	 EOF 
;

// Rule TemplateDefinition
ruleTemplateDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		lv_name_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTemplateDefinitionAccess().getNameIDTerminalRuleCall_0_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getTemplateDefinitionAccess().getEqualsSignKeyword_0_1(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTemplateDefinitionAccess().getReferenceCompositeReferenceDefinitionParserRuleCall_1_0(), currentNode); 
	    }
		lv_reference_2_0=ruleCompositeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"reference",
	        		lv_reference_2_0, 
	        		"CompositeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAttributeDefinitionRule(), currentNode); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'attribute' 
    {
        createLeafNode(grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAttributeDefinitionAccess().getTypeAttributeTypeParserRuleCall_2_0(), currentNode); 
	    }
		lv_type_2_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_2_0, 
	        		"AttributeType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_attributeName_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAttributeDefinitionAccess().getAttributeNameIDTerminalRuleCall_3_0(), "attributeName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"attributeName",
	        		lv_attributeName_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'=' 
    {
        createLeafNode(grammarAccess.getAttributeDefinitionAccess().getEqualsSignKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAttributeDefinitionAccess().getValueValueParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_value_5_0=ruleValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_5_0, 
	        		"Value", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleArgumentDefinition
entryRuleArgumentDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getArgumentDefinitionRule(), currentNode); }
	 iv_ruleArgumentDefinition=ruleArgumentDefinition 
	 { $current=$iv_ruleArgumentDefinition.current; } 
	 EOF 
;

// Rule ArgumentDefinition
ruleArgumentDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
(
		lv_argumentName_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getArgumentDefinitionAccess().getArgumentNameIDTerminalRuleCall_0_0_0(), "argumentName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argumentName",
	        		lv_argumentName_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getArgumentDefinitionAccess().getEqualsSignKeyword_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_0_2_0(), currentNode); 
	    }
		lv_argumentValue_2_0=ruleValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argumentValue",
	        		lv_argumentValue_2_0, 
	        		"Value", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getArgumentDefinitionAccess().getArgumentValueValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_argumentValue_3_0=ruleValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getArgumentDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"argumentValue",
	        		lv_argumentValue_3_0, 
	        		"Value", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleInterfaceDefinition
entryRuleInterfaceDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInterfaceDefinitionRule(), currentNode); }
	 iv_ruleInterfaceDefinition=ruleInterfaceDefinition 
	 { $current=$iv_ruleInterfaceDefinition.current; } 
	 EOF 
;

// Rule InterfaceDefinition
ruleInterfaceDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getRoleRoleEnumRuleCall_1_0(), currentNode); 
	    }
		lv_role_1_0=ruleRole		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"role",
	        		lv_role_1_0, 
	        		"Role", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getSignatureFQNParserRuleCall_2_0(), currentNode); 
	    }
		lv_signature_2_0=ruleFQN		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"signature",
	        		lv_signature_2_0, 
	        		"FQN", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'as' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getAsKeyword_3(), null); 
    }
(
(
		lv_name_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getNameIDTerminalRuleCall_4_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)((
(
		lv_collection_5_0=	'[' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionLeftSquareBracketKeyword_5_0_0(), "collection"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collection", true, "[", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		lv_collectionsize_6_0=RULE_INT
		{
			createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionsizeINTTerminalRuleCall_5_1_0(), "collectionsize"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"collectionsize",
	        		lv_collectionsize_6_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		lv_collection_7_0=	']' 
    {
        createLeafNode(grammarAccess.getInterfaceDefinitionAccess().getCollectionRightSquareBracketKeyword_5_2_0(), "collection"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collection", true, "]", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceDefinitionAccess().getContingencyContingencyEnumRuleCall_6_0(), currentNode); 
	    }
		lv_contingency_8_0=ruleContingency		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contingency",
	        		lv_contingency_8_0, 
	        		"Contingency", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleBindingDefinition
entryRuleBindingDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getBindingDefinitionRule(), currentNode); }
	 iv_ruleBindingDefinition=ruleBindingDefinition 
	 { $current=$iv_ruleBindingDefinition.current; } 
	 EOF 
;

// Rule BindingDefinition
ruleBindingDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getBindingDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(	'binds' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getBindsKeyword_1_0(), null); 
    }
(	'this' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_1_0(), null); 
    }

    |(
(
		lv_interfaceSourceParentName_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceParentNameIDTerminalRuleCall_1_1_1_0(), "interfaceSourceParentName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceSourceParentName",
	        		lv_interfaceSourceParentName_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))	'.' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_1_2(), null); 
    }
(
(
		lv_interfaceSourceName_5_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceNameIDTerminalRuleCall_1_3_0(), "interfaceSourceName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceSourceName",
	        		lv_interfaceSourceName_5_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'[' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_1_4_0(), null); 
    }
(
(
		lv_interfaceSourceIndex_7_0=RULE_INT
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceSourceIndexINTTerminalRuleCall_1_4_1_0(), "interfaceSourceIndex"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceSourceIndex",
	        		lv_interfaceSourceIndex_7_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_1_4_2(), null); 
    }
)?	'to' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getToKeyword_1_5(), null); 
    }
(	'this' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getThisKeyword_1_6_0(), null); 
    }

    |(
(
		lv_interfaceTargetParentName_11_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetParentNameIDTerminalRuleCall_1_6_1_0(), "interfaceTargetParentName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceTargetParentName",
	        		lv_interfaceTargetParentName_11_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))	'.' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getFullStopKeyword_1_7(), null); 
    }
(
(
		lv_interfaceTargetName_13_0=RULE_ID
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetNameIDTerminalRuleCall_1_8_0(), "interfaceTargetName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceTargetName",
	        		lv_interfaceTargetName_13_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'[' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getLeftSquareBracketKeyword_1_9_0(), null); 
    }
(
(
		lv_interfaceTargetIndex_15_0=RULE_INT
		{
			createLeafNode(grammarAccess.getBindingDefinitionAccess().getInterfaceTargetIndexINTTerminalRuleCall_1_9_1_0(), "interfaceTargetIndex"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBindingDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"interfaceTargetIndex",
	        		lv_interfaceTargetIndex_15_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getBindingDefinitionAccess().getRightSquareBracketKeyword_1_9_2(), null); 
    }
)?))
;





// Entry rule entryRuleDataDefinition
entryRuleDataDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDataDefinitionRule(), currentNode); }
	 iv_ruleDataDefinition=ruleDataDefinition 
	 { $current=$iv_ruleDataDefinition.current; } 
	 EOF 
;

// Rule DataDefinition
ruleDataDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDataDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?((	'data' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getDataKeyword_1_0_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDataDefinitionAccess().getFileCFileCParserRuleCall_1_0_1_0_0(), currentNode); 
	    }
		lv_fileC_2_0=ruleFileC		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fileC",
	        		lv_fileC_2_0, 
	        		"FileC", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDataDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_1_0_1_1_0(), currentNode); 
	    }
		lv_inlineCcode_3_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDataDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"inlineCcode",
	        		lv_inlineCcode_3_0, 
	        		"InlineCodeC", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
    |	'nodata' 
    {
        createLeafNode(grammarAccess.getDataDefinitionAccess().getNodataKeyword_1_1(), null); 
    }
))
;





// Entry rule entryRuleImplementationDefinition
entryRuleImplementationDefinition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImplementationDefinitionRule(), currentNode); }
	 iv_ruleImplementationDefinition=ruleImplementationDefinition 
	 { $current=$iv_ruleImplementationDefinition.current; } 
	 EOF 
;

// Rule ImplementationDefinition
ruleImplementationDefinition returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImplementationDefinitionAccess().getAnnotationsListAnnotationsListParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotationsList_0_0=ruleAnnotationsList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementationDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationsList",
	        		lv_annotationsList_0_0, 
	        		"AnnotationsList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'source' 
    {
        createLeafNode(grammarAccess.getImplementationDefinitionAccess().getSourceKeyword_1(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImplementationDefinitionAccess().getFileCFileCParserRuleCall_2_0_0(), currentNode); 
	    }
		lv_fileC_2_0=ruleFileC		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementationDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fileC",
	        		lv_fileC_2_0, 
	        		"FileC", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImplementationDefinitionAccess().getInlineCcodeInlineCodeCParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_inlineCcode_3_0=ruleInlineCodeC		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImplementationDefinitionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"inlineCcode",
	        		lv_inlineCcode_3_0, 
	        		"InlineCodeC", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleTemplateSpecifier
entryRuleTemplateSpecifier returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTemplateSpecifierRule(), currentNode); }
	 iv_ruleTemplateSpecifier=ruleTemplateSpecifier 
	 { $current=$iv_ruleTemplateSpecifier.current; } 
	 EOF 
;

// Rule TemplateSpecifier
ruleTemplateSpecifier returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTemplateSpecifierAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifierRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'conformsto' 
    {
        createLeafNode(grammarAccess.getTemplateSpecifierAccess().getConformstoKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTemplateSpecifierAccess().getReferenceTypeReferenceDefinitionParserRuleCall_2_0(), currentNode); 
	    }
		lv_reference_2_0=ruleTypeReferenceDefinition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTemplateSpecifierRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"reference",
	        		lv_reference_2_0, 
	        		"TypeReferenceDefinition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleFileC
entryRuleFileC returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFileCRule(), currentNode); }
	 iv_ruleFileC=ruleFileC 
	 { $current=$iv_ruleFileC.current; } 
	 EOF 
;

// Rule FileC
ruleFileC returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_directory_0_0=RULE_PATH
		{
			createLeafNode(grammarAccess.getFileCAccess().getDirectoryPathTerminalRuleCall_0_0(), "directory"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFileCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"directory",
	        		lv_directory_0_0, 
	        		"Path", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFileCAccess().getFileNameFileNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_fileName_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFileCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"fileName",
	        		lv_fileName_1_0, 
	        		"FileName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleFileName
entryRuleFileName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFileNameRule(), currentNode); } 
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current.getText(); }  
	 EOF 
;

// Rule FileName
ruleFileName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getFileNameAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getFileNameAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getFileNameAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)?)
    ;





// Entry rule entryRuleInlineCodeC
entryRuleInlineCodeC returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInlineCodeCRule(), currentNode); }
	 iv_ruleInlineCodeC=ruleInlineCodeC 
	 { $current=$iv_ruleInlineCodeC.current; } 
	 EOF 
;

// Rule InlineCodeC
ruleInlineCodeC returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_codeC_0_0=RULE_CODEC
		{
			createLeafNode(grammarAccess.getInlineCodeCAccess().getCodeCCodeCTerminalRuleCall_0(), "codeC"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInlineCodeCRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"codeC",
	        		lv_codeC_0_0, 
	        		"CodeC", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleAnnotationsList
entryRuleAnnotationsList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationsListRule(), currentNode); }
	 iv_ruleAnnotationsList=ruleAnnotationsList 
	 { $current=$iv_ruleAnnotationsList.current; } 
	 EOF 
;

// Rule AnnotationsList
ruleAnnotationsList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_0_0(), currentNode); 
	    }
		lv_annotations_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"annotations",
	        		lv_annotations_0_0, 
	        		"Annotation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationsListAccess().getAnnotationsAnnotationParserRuleCall_1_0(), currentNode); 
	    }
		lv_annotations_1_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationsListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"annotations",
	        		lv_annotations_1_0, 
	        		"Annotation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationRule(), currentNode); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getNameAnnotationTypeParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"AnnotationType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'(' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_annotationElements_3_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"annotationElements",
	        		lv_annotationElements_3_0, 
	        		"AnnotationElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationElementsAnnotationElementParserRuleCall_2_2_1_0(), currentNode); 
	    }
		lv_annotationElements_5_0=ruleAnnotationElement		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"annotationElements",
	        		lv_annotationElements_5_0, 
	        		"AnnotationElement", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	')' 
    {
        createLeafNode(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3(), null); 
    }
)?)
;





// Entry rule entryRuleAnnotationElement
entryRuleAnnotationElement returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationElementRule(), currentNode); }
	 iv_ruleAnnotationElement=ruleAnnotationElement 
	 { $current=$iv_ruleAnnotationElement.current; } 
	 EOF 
;

// Rule AnnotationElement
ruleAnnotationElement returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_0_0(), currentNode); 
	    }
		lv_elementValue_0_0=ruleElementValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_0_0, 
	        		"ElementValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |((
(
		lv_elementName_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getAnnotationElementAccess().getElementNameIDTerminalRuleCall_1_0_0(), "elementName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elementName",
	        		lv_elementName_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getAnnotationElementAccess().getEqualsSignKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationElementAccess().getElementValueElementValueParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_elementValue_3_0=ruleElementValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_3_0, 
	        		"ElementValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleElementValue
entryRuleElementValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementValueRule(), currentNode); }
	 iv_ruleElementValue=ruleElementValue 
	 { $current=$iv_ruleElementValue.current; } 
	 EOF 
;

// Rule ElementValue
ruleElementValue returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getConstantValueParserRuleCall_0(), currentNode); 
    }
    this_ConstantValue_0=ruleConstantValue
    { 
        $current = $this_ConstantValue_0.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getAnnotationParserRuleCall_1(), currentNode); 
    }
    this_Annotation_1=ruleAnnotation
    { 
        $current = $this_Annotation_1.current; 
        currentNode = currentNode.getParent();
    }

    |
	{ 
	  /* */ 
	}
    { 
        currentNode=createCompositeNode(grammarAccess.getElementValueAccess().getElementValueArrayInitializerParserRuleCall_2(), currentNode); 
    }
    this_ElementValueArrayInitializer_2=ruleElementValueArrayInitializer
    { 
        $current = $this_ElementValueArrayInitializer_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstantValueRule(), currentNode); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConstantValueAccess().getValueConstantFormatParserRuleCall_0(), currentNode); 
	    }
		lv_value_0_0=ruleConstantFormat		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConstantValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"ConstantFormat", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleConstantFormat
entryRuleConstantFormat returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConstantFormatRule(), currentNode); } 
	 iv_ruleConstantFormat=ruleConstantFormat 
	 { $current=$iv_ruleConstantFormat.current.getText(); }  
	 EOF 
;

// Rule ConstantFormat
ruleConstantFormat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    createLeafNode(grammarAccess.getConstantFormatAccess().getINTTerminalRuleCall_0(), null); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    createLeafNode(grammarAccess.getConstantFormatAccess().getSTRINGTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleElementValueArrayInitializer
entryRuleElementValueArrayInitializer returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementValueArrayInitializerRule(), currentNode); }
	 iv_ruleElementValueArrayInitializer=ruleElementValueArrayInitializer 
	 { $current=$iv_ruleElementValueArrayInitializer.current; } 
	 EOF 
;

// Rule ElementValueArrayInitializer
ruleElementValueArrayInitializer returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'{' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getLeftCurlyBracketKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_1_0(), currentNode); 
	    }
		lv_values_1_0=ruleElementValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueArrayInitializerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_1_0, 
	        		"ElementValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getCommaKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueArrayInitializerAccess().getValuesElementValueParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_values_3_0=ruleElementValue		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueArrayInitializerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_3_0, 
	        		"ElementValue", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getElementValueArrayInitializerAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleValue
entryRuleValue returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueRule(), currentNode); } 
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current.getText(); }  
	 EOF 
;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getValueAccess().getIDTerminalRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getValueAccess().getSignedINTParserRuleCall_1(), currentNode); 
    }
    this_signedINT_1=rulesignedINT    {
		$current.merge(this_signedINT_1);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getValueAccess().getHexadecimalTypeParserRuleCall_2(), currentNode); 
    }
    this_HexadecimalType_2=ruleHexadecimalType    {
		$current.merge(this_HexadecimalType_2);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    createLeafNode(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_3(), null); 
    }

    |
	kw='null' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getValueAccess().getNullKeyword_4(), null); 
    }
)
    ;





// Entry rule entryRuleHexadecimalType
entryRuleHexadecimalType returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getHexadecimalTypeRule(), currentNode); } 
	 iv_ruleHexadecimalType=ruleHexadecimalType 
	 { $current=$iv_ruleHexadecimalType.current.getText(); }  
	 EOF 
;

// Rule HexadecimalType
ruleHexadecimalType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='0x' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getHexadecimalTypeAccess().getXKeyword_0(), null); 
    }
    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getHexadecimalTypeAccess().getINTTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationTypeRule(), currentNode); } 
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current.getText(); }  
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='Override' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getOverrideKeyword_0(), null); 
    }

    |
	kw='Singleton' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getSingletonKeyword_1(), null); 
    }

    |
	kw='LDFlags' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getLDFlagsKeyword_2(), null); 
    }

    |
	kw='CFlags' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAnnotationTypeAccess().getCFlagsKeyword_3(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAnnotationTypeAccess().getFQNParserRuleCall_4(), currentNode); 
    }
    this_FQN_4=ruleFQN    {
		$current.merge(this_FQN_4);
    }

    { 
        currentNode = currentNode.getParent();
    }
)
    ;





// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAttributeTypeRule(), currentNode); } 
	 iv_ruleAttributeType=ruleAttributeType 
	 { $current=$iv_ruleAttributeType.current.getText(); }  
	 EOF 
;

// Rule AttributeType
ruleAttributeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='STRUCT' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getSTRUCTKeyword_0(), null); 
    }

    |
	kw='UNION' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getUNIONKeyword_1(), null); 
    }

    |
	kw='ENUM' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getAttributeTypeAccess().getENUMKeyword_2(), null); 
    }

    |    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    createLeafNode(grammarAccess.getAttributeTypeAccess().getIDTerminalRuleCall_3(), null); 
    }
)
    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFQNRule(), currentNode); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getFQNAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleFULL_IMPORT_NAME
entryRuleFULL_IMPORT_NAME returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFULL_IMPORT_NAMERule(), currentNode); } 
	 iv_ruleFULL_IMPORT_NAME=ruleFULL_IMPORT_NAME 
	 { $current=$iv_ruleFULL_IMPORT_NAME.current.getText(); }  
	 EOF 
;

// Rule FULL_IMPORT_NAME
ruleFULL_IMPORT_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getFULL_IMPORT_NAMEAccess().getFQNParserRuleCall_0(), currentNode); 
    }
    this_FQN_0=ruleFQN    {
		$current.merge(this_FQN_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

	kw='.*' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getFULL_IMPORT_NAMEAccess().getFullStopAsteriskKeyword_1(), null); 
    }
)
    ;





// Entry rule entryRulesignedINT
entryRulesignedINT returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSignedINTRule(), currentNode); } 
	 iv_rulesignedINT=rulesignedINT 
	 { $current=$iv_rulesignedINT.current.getText(); }  
	 EOF 
;

// Rule signedINT
rulesignedINT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((
	kw='+' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSignedINTAccess().getPlusSignKeyword_0_0(), null); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getSignedINTAccess().getHyphenMinusKeyword_0_1(), null); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    createLeafNode(grammarAccess.getSignedINTAccess().getINTTerminalRuleCall_1(), null); 
    }
)
    ;





// Rule Contingency
ruleContingency returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'optional' 
	{
        $current = grammarAccess.getContingencyAccess().getOptionalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getContingencyAccess().getOptionalEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'mandatory' 
	{
        $current = grammarAccess.getContingencyAccess().getMandatoryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getContingencyAccess().getMandatoryEnumLiteralDeclaration_1(), null); 
    }
));



// Rule Role
ruleRole returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'provides' 
	{
        $current = grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getRoleAccess().getProvidesEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'requires' 
	{
        $current = grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getRoleAccess().getRequiresEnumLiteralDeclaration_1(), null); 
    }
));



RULE_CODEC : '{{' ( options {greedy=false;} : . )*'}}';

RULE_PATH : (RULE_ID ':'?|'.'*) (('\\'|'\\\\'|'/') RULE_ID)* ('\\'|'\\\\'|'/');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


