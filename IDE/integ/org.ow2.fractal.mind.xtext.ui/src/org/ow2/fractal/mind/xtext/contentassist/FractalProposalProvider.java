/*
* generated by Xtext
*/
package org.ow2.fractal.mind.xtext.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.core.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.core.editor.contentassist.ICompletionProposalAcceptor;
import org.ow2.fractal.mind.xtext.contentassist.AbstractFractalProposalProvider;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class FractalProposalProvider extends AbstractFractalProposalProvider {

	
	
	/**
	 * example of adding import proposals
	 */
	@Override
	public void complete_ImportDefinition(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_ImportDefinition(model, ruleCall, context, acceptor);
		
		String proposal = "org.ow2.fractal.mind.Try";
		proposal = getValueConverter().toString(proposal, "ID");
		ICompletionProposal completionProposal = createCompletionProposal(proposal, context);
		
		acceptor.accept(completionProposal);
	}
	
	
	/**
	 *  example of adding FileC proposals
	 */
	@Override
	public void complete_FileC(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// TODO Auto-generated method stub
		super.complete_FileC(model, ruleCall, context, acceptor);
		
		String proposal = "main.c";
		proposal = getValueConverter().toString(proposal, "ID");
		ICompletionProposal completionProposal = createCompletionProposal(proposal, context);
		
		acceptor.accept(completionProposal);
	}
}
